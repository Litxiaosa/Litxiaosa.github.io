<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[学习Git（五）之 搭建Git服务器]]></title>
      <url>/2017/11/29/%E5%AD%A6%E4%B9%A0Git%EF%BC%88%E4%BA%94%EF%BC%89%20%E4%B9%8B%20%E6%90%AD%E5%BB%BAGit%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      <content type="html"><![CDATA[<p>在之前的学习中，我们讲了远程仓库实际上和本地仓库没啥不同，纯粹为了7x24小时开机并交换大家的修改。</p>
<p>GitHub就是一个免费托管开源代码的远程仓库。但是对于某些视源代码如生命的商业公司来说，既不想公开源代码，又舍不得给GitHub交保护费，那就只能自己搭建一台Git服务器作为私有仓库使用。</p>
<a id="more"></a>
<p>搭建Git服务器需要准备一台运行Linux的机器。我是在VMware虚拟机上装了一个CentOS 如果你装的是Ubuntu或者其他的，安装命令可能会不同。这个要注意一下。</p>
<p>假设你已经有sudo权限的用户账号，下面，正式开始安装。</p>
<p>第一步，安装git：</p>
<pre><code>sudo yum install git
</code></pre><p>如果安装不上可能是网络没配好，找到这个下面这个文件</p>
<p><img src="/2017/11/29/学习Git（五） 之 搭建Git服务器/1.png" alt=""></p>
<p>看一下标红的是不是no,如果是,该为yes。再执行上边那个操作就可以了。</p>
<p><img src="/2017/11/29/学习Git（五） 之 搭建Git服务器/2.png" alt=""></p>
<p>第二步，创建证书：</p>
<p>收集所有需要登录的用户的公钥，就是他们自己的id_rsa.pub文件，把所有公钥导入到 <code>/home/git/.ssh/authorized_keys</code> 文件里，一行一个。</p>
<p><code>git   和 .ssh/keys</code>  是自己手动创建的，我的创建在了root目录下。</p>
<p>创建命令是：</p>
<pre><code>mkdir git
mkdir .ssh  
</code></pre><p>然后给这个目录对应的权限：</p>
<pre><code>chmod 700 .ssh/
</code></pre><p>再<code>cd .ssh</code> 创建 keys 文件：</p>
<pre><code>touch keys
</code></pre><p> 然后给这个文件对应的权限</p>
<pre><code>chmod 600 keys
</code></pre><p>接着就是把所有的公钥导入了。</p>
<p>第三步，初始化Git仓库：</p>
<p>先选定一个目录作为Git仓库，假定是/root/lean.git，在/root目录下输入命令：</p>
<pre><code>sudo git init --bare lean.git
</code></pre><p><img src="/2017/11/29/学习Git（五） 之 搭建Git服务器/3.png" alt=""></p>
<p>第四步，克隆远程仓库：</p>
<p>现在，可以通过git clone命令克隆远程仓库了，在各自的电脑上运行：</p>
<pre><code>git clone git@server:/root/lean.git
</code></pre><blockquote>
<p>@server: 对应你们git服务器的ip地址。 </p>
</blockquote>
<p>剩下的推送就简单了。</p>
]]></content>
      
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[学习Git（四） 之 分支管理]]></title>
      <url>/2017/11/29/%E5%AD%A6%E4%B9%A0Git%EF%BC%88%E5%9B%9B%EF%BC%89%20%E4%B9%8B%20%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<p>分支就是科幻电影里面的平行宇宙，当你正在电脑前努力学习Git的时候，另一个你正在另一个平行宇宙里努力学习SVN。</p>
<p>如果两个平行宇宙互不干扰，那对现在的你也没啥影响。不过，在某个时间点，两个平行宇宙合并了，结果，你既学会了Git又学会了SVN！</p>
<a id="more"></a>
<p><img src="/2017/11/29/学习Git（四） 之 分支管理/1.png" alt=""></p>
<p>分支在实际中有什么用呢？假设你准备开发一个新功能，但是需要两周才能完成，第一周你写了50%的代码，如果立刻提交，由于代码还没写完，不完整的代码库会导致别人不能干活了。如果等代码全部写完再一次提交，又存在丢失每天进度的巨大风险。</p>
<p>现在有了分支，就不用怕了。你创建了一个属于你自己的分支，别人看不到，还继续在原来的分支上正常工作，而你在自己的分支上干活，想提交就提交，直到开发完毕后，再一次性合并到原来的分支上，这样，既安全，又不影响别人工作。</p>
<p>每次提交，Git都把它们串成一条时间线，这条时间线就是一个分支。截止到目前，只有一条时间线，在Git里，这个分支叫主分支，即master分支。</p>
<p>一开始的时候，master分支是一条线，Git用master指向最新的提交，再用HEAD指向master，就能确定当前分支，以及当前分支的提交点：</p>
<p><img src="/2017/11/29/学习Git（四） 之 分支管理/2.png" alt=""></p>
<p>每次提交，master分支都会向前移动一步，这样，随着你不断提交，master分支的线也越来越长：</p>
<p>当我们创建新的分支，例如dev时，Git新建了一个指针叫dev，指向master相同的提交，再把HEAD指向dev，就表示当前分支在dev上：</p>
<p><img src="/2017/11/29/学习Git（四） 之 分支管理/3.png" alt=""></p>
<p>你看，Git创建一个分支很快，因为除了增加一个dev指针，改改HEAD的指向，工作区的文件都没有任何变化！</p>
<p>不过，从现在开始，对工作区的修改和提交就是针对dev分支了，比如新提交一次后，dev指针往前移动一步，而master指针不变：</p>
<p><img src="/2017/11/29/学习Git（四） 之 分支管理/4.png" alt=""></p>
<p>假如我们在dev上的工作完成了，就可以把dev合并到master上。Git怎么合并呢？最简单的方法，就是直接把master指向dev的当前提交，就完成了合并：</p>
<p><img src="/2017/11/29/学习Git（四） 之 分支管理/5.png" alt=""></p>
<p>所以Git合并分支也很快！就改改指针，工作区内容也不变！</p>
<p>合并完分支后，甚至可以删除dev分支。删除dev分支就是把dev指针给删掉，删掉后，我们就剩下了一条master分支：</p>
<p><img src="/2017/11/29/学习Git（四） 之 分支管理/6.png" alt=""></p>
<h3 id="创建与合并分支"><a href="#创建与合并分支" class="headerlink" title="创建与合并分支"></a>创建与合并分支</h3><p>首先，我们创建dev分支，然后切换到dev分支, 当然了，要在你本地的仓库目录下：</p>
<pre><code>git checkout -b dev
</code></pre><p><img src="/2017/11/29/学习Git（四） 之 分支管理/7.png" alt=""></p>
<p><code>git checkout</code> 命令加上-b参数表示创建并切换，相当于以下两条命令：</p>
<pre><code>git branch dev
git checkout dev
</code></pre><p>然后，用git branch命令查看当前分支：</p>
<pre><code>git branch
</code></pre><p><img src="/2017/11/29/学习Git（四） 之 分支管理/8.png" alt=""></p>
<p><code>git branch</code> 命令会列出所有分支，当前分支前面会标一个*号。</p>
<p>然后，我们就可以在dev分支上正常提交，比如对demo.txt做个修改，加上 haha</p>
<p>然后提交</p>
<pre><code>git add demo.txt
git commit -m &quot;branch test&quot;
</code></pre><p><img src="/2017/11/29/学习Git（四） 之 分支管理/9.png" alt=""></p>
<p>现在，dev分支的工作完成，我们就可以切换回master分支：</p>
<pre><code>git checkout master
</code></pre><p>切换回master分支后，再查看一个demo.txt文件，刚才添加的内容不见了！因为那个提交是在dev分支上，而master分支此刻的提交点并没有变：</p>
<p><img src="/2017/11/29/学习Git（四） 之 分支管理/10.png" alt=""></p>
<p>现在，我们把dev分支的工作成果合并到master分支上：</p>
<pre><code>git merge dev
</code></pre><p><img src="/2017/11/29/学习Git（四） 之 分支管理/11.png" alt=""></p>
<p>合并完成后，就可以放心地删除dev分支了：</p>
<pre><code>git branch -D dev
</code></pre><p><img src="/2017/11/29/学习Git（四） 之 分支管理/12.png" alt=""></p>
<p>删除后，查看branch，就只剩下master分支了：</p>
<p><img src="/2017/11/29/学习Git（四） 之 分支管理/13.png" alt=""></p>
<p>因为创建、合并和删除分支非常快，所以Git鼓励你使用分支完成某个任务，合并后再删掉分支，这和直接在master分支上工作效果是一样的，但过程更安全。</p>
<h3 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h3><p>人生不如意之事十之八九，合并分支往往也不是一帆风顺的</p>
<p>准备新的feature1分支，继续我们的新分支开发：</p>
<pre><code>git checkout -b feature1
</code></pre><p>再次修改demo.txt, 增加： </p>
<pre><code>Creating a new branch is quick AND simple.
</code></pre><p>在feature1分支上提交：</p>
<pre><code>git add demo.txt
git commit -m &quot;AND simple&quot;
</code></pre><p>切换到master分支：</p>
<pre><code>git checkout master
</code></pre><p>Git还会自动提示我们当前master分支比远程的master分支要超前1个提交。</p>
<p><img src="/2017/11/29/学习Git（四） 之 分支管理/14.png" alt=""></p>
<p>在master分支上把demo.txt文件的最后一行替换为:</p>
<pre><code>Creating a new branch is quick &amp; simple
</code></pre><p>提交</p>
<pre><code>git add demo.txt 
git commit -m &quot;&amp; simple&quot;
</code></pre><p>现在，master分支和feature1分支各自都分别有新的提交，变成了这样：</p>
<p><img src="/2017/11/29/学习Git（四） 之 分支管理/15.png" alt=""></p>
<p>这种情况下，Git无法执行“快速合并”，只能试图把各自的修改合并起来，但这种合并就可能会有冲突，我们试试看：</p>
<pre><code>git merge feature1
</code></pre><p><img src="/2017/11/29/学习Git（四） 之 分支管理/16.png" alt=""></p>
<p>果然冲突了！Git告诉我们，demo.txt文件存在冲突，必须手动解决冲突后再提交。我们可以直接查看demo.txt的内容：</p>
<p><img src="/2017/11/29/学习Git（四） 之 分支管理/17.png" alt=""></p>
<p>Git用&lt;&lt;&lt;&lt;&lt;&lt;&lt;，=======，&gt;&gt;&gt;&gt;&gt;&gt;&gt;标记出不同分支的内容，我们修改如下后保存：</p>
<p><img src="/2017/11/29/学习Git（四） 之 分支管理/18.png" alt=""></p>
<p>再提交：</p>
<pre><code>git add demo.txt
git commit -m &quot;conflict fixed&quot;
</code></pre><p>现在，master分支和feature1分支变成了下图所示：</p>
<p><img src="/2017/11/29/学习Git（四） 之 分支管理/19.png" alt=""></p>
<p>用带参数的git log也可以看到分支的合并情况：</p>
<p><img src="/2017/11/29/学习Git（四） 之 分支管理/20.png" alt="">    </p>
<p>最后，删除feature1分支：</p>
<pre><code>git branch -D feature1    
</code></pre><p>工作完成。</p>
<h3 id="分支策略"><a href="#分支策略" class="headerlink" title="分支策略"></a>分支策略</h3><p>在实际开发中，我们应该按照几个基本原则进行分支管理：</p>
<p>首先，master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；</p>
<p>那在哪干活呢？干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；</p>
<p>你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。</p>
<p>所以，团队合作的分支看起来就像这样：</p>
<p><img src="/2017/11/29/学习Git（四） 之 分支管理/21.png" alt=""></p>
<h3 id="多人协作"><a href="#多人协作" class="headerlink" title="多人协作"></a>多人协作</h3><p>当你从远程仓库克隆时，实际上Git自动把本地的master分支和远程的master分支对应起来了，并且，远程仓库的默认名称是origin。</p>
<p>要查看远程库的信息，用git remote：</p>
<pre><code>git remote
</code></pre><p><img src="/2017/11/29/学习Git（四） 之 分支管理/22.png" alt=""></p>
<p>或者，用git remote -v显示更详细的信息</p>
<pre><code>git remote -v
</code></pre><p><img src="/2017/11/29/学习Git（四） 之 分支管理/23.png" alt=""></p>
<p>上面显示了可以抓取和推送的origin的地址。如果没有推送权限，就看不到push的地址。</p>
<h4 id="推送分支"><a href="#推送分支" class="headerlink" title="推送分支"></a><strong>推送分支</strong></h4><p>推送分支，就是把该分支上的所有本地提交推送到远程库。推送时，要指定本地分支，这样，Git就会把该分支推送到远程库对应的远程分支上：</p>
<pre><code>git push origin master
</code></pre><p>如果要推送其他分支，比如dev，就改成：</p>
<pre><code>git push origin dev
</code></pre><p>但是，并不是一定要把本地分支往远程推送，那么，哪些分支需要推送，哪些不需要呢？</p>
<ul>
<li>master分支是主分支，因此要时刻与远程同步；</li>
<li>dev分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步；</li>
</ul>
<p>总之，就是在Git中，分支完全可以在本地自己藏着玩，是否推送，视你的心情而定！</p>
<h4 id="抓取分支"><a href="#抓取分支" class="headerlink" title="抓取分支"></a><strong>抓取分支</strong></h4><p>多人协作时，大家都会往master和dev分支上推送各自的修改。</p>
<p>现在，模拟一个你的小伙伴，可以在另一台电脑（注意要把SSH Key添加到GitHub）或者同一台电脑的另一个目录下克隆：</p>
<pre><code>git clone https://github.com/Litxiaosa/learnGit.git
</code></pre><p><img src="/2017/11/29/学习Git（四） 之 分支管理/24.png" alt=""></p>
<p>当你的小伙伴从远程库clone时，默认情况下，你的小伙伴只能看到本地的master分支。不信可以用git branch命令看看：</p>
<pre><code>git branch
</code></pre><p><img src="/2017/11/29/学习Git（四） 之 分支管理/25.png" alt=""></p>
<p>现在，你的小伙伴要在dev分支上开发，就必须创建远程origin的dev分支到本地，于是他用这个命令创建本地dev分支：</p>
<pre><code>git checkout -b dev origin/dev
</code></pre><p><img src="/2017/11/29/学习Git（四） 之 分支管理/26.png" alt=""></p>
<p>现在，他就可以在dev上继续修改，(我们在里面添加了hello world)然后，时不时地把dev分支push到远程：</p>
<pre><code>git add demo.txt
git commit -m &quot;add hello world&quot;
git push origin dev
</code></pre><p> 可能让你输入你的GitHub的用户名和密码 </p>
<p><img src="/2017/11/29/学习Git（四） 之 分支管理/27.png" alt=""></p>
<p>你的小伙伴已经向origin/dev分支推送了他的提交，而碰巧你也对同样的文件作了修改，并试图推送,我们添加了一句：hello git</p>
<pre><code>git add demo.txt
git commit -m &quot;add hello git&quot;
git push origin dev
</code></pre><p><img src="/2017/11/29/学习Git（四） 之 分支管理/28.png" alt=""></p>
<p>推送失败，因为你的小伙伴的最新提交和你试图推送的提交有冲突，解决办法也很简单，Git已经提示我们，先用git pull把最新的提交从origin/dev抓下来，然后，在本地合并，解决冲突，再推送：</p>
<pre><code>git pull origin dev
</code></pre><p><img src="/2017/11/29/学习Git（四） 之 分支管理/29.png" alt=""></p>
<p>git pull成功，但是合并有冲突，需要手动解决，解决的方法和分支管理中的解决冲突完全一样。解决后，提交，再push。</p>
<p>因此，多人协作的工作模式通常是这样：</p>
<p>首先，可以试图用 <code>git push origin branch-name</code> 推送自己的修改；</p>
<p>如果推送失败，则因为远程分支比你的本地更新，需要先用 <code>git pull</code> 试图合并；</p>
<p>如果合并有冲突，则解决冲突，并在本地提交；</p>
<p>没有冲突或者解决掉冲突后，再用 <code>git push origin branch-name</code> 推送就能成功！</p>
<p>这就是多人协作的工作模式，一旦熟悉了，就非常简单。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a><strong>小结</strong></h2><blockquote>
<ul>
<li>git branch           查看当前分支</li>
<li>git branch -v        查看每一个分支的最后一次提交</li>
<li>git branch -a        查看本地和远程分支的情况</li>
<li>git branch –merged  查看已经与当前分支合并的分支</li>
<li>git branch –no-merged 查看已经与当前分支未合并的分支</li>
<li>git branch -r        查看远程分支</li>
<li>git branch dev       创建分支 dev</li>
<li>git checkout dev     切换到分支dev</li>
<li>git checkout -b dev  创建并切换分支dev</li>
<li>git merge dev        名称为dev的分支与当前分支合并</li>
<li>git branch -d dev    删除分支dev</li>
</ul>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[学习Git（三） 之 远程仓库]]></title>
      <url>/2017/11/28/%E5%AD%A6%E4%B9%A0Git%EF%BC%88%E4%B8%89%EF%BC%89%20%E4%B9%8B%20%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</url>
      <content type="html"><![CDATA[<p>Git本地操作的熟练了后，就可以尝试连接远程仓库了，完全可以自己搭建一台运行Git的服务器，找一台电脑充当服务器的角色，每天24小时开机，其他每个人都从这个“服务器”仓库克隆一份到自己的电脑上，并且各自把各自的提交推送到服务器仓库里，也从服务器仓库中拉取别人的提交，不过现阶段，我们不打算这么搞。目前国内外比较出名的提供Git仓库远程托管的有国外的GitHub，国内的开源中国以及coding。这里我以GitHub为例子介绍如何操作远程仓库。</p>
<a id="more"></a>
<p>现在的情景是，你已经在本地创建了一个Git仓库，又想在GitHub创建一个Git仓库，并且让这两个仓库进行远程同步，这样，GitHub上的仓库既可以作为备份，又可以让其他人通过该仓库来协作。</p>
<h2 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h2><ol>
<li><p>首先，登陆GitHub，然后，在右上角找到“new repository”按钮，创建一个新的仓库：</p>
<p> <img src="/2017/11/28/学习Git（三） 之 远程仓库/创建仓库.png" alt=""></p>
</li>
<li><p>在Repository name填入learnGit，其他保持默认设置，点击“Create repository”按钮，就成功地创建了一个新的Git仓库：</p>
<p> <img src="/2017/11/28/学习Git（三） 之 远程仓库/leanGit.png" alt=""></p>
</li>
<li><p>目前，在GitHub上的这个learnGit仓库还是空的，GitHub告诉我们，可以从这个仓库克隆出新的仓库，也可以把一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到GitHub仓库。</p>
<p> <img src="/2017/11/28/学习Git（三） 之 远程仓库/创建仓库成功.png" alt=""></p>
</li>
<li><p>现在，我们根据GitHub的提示，在本地的GitRepository仓库下运行命令：</p>
<pre><code>git remote add origin git@github.com:Litxiaosa/learnGit.git
</code></pre><p> 请千万注意，把上面的Litxiaosa替换成你自己的GitHub账户名，否则，你在本地关联的就是我的远程库，关联没有问题，但是你以后推送是推不上去的，因为你的SSH Key公钥不在我的账户列表中。</p>
</li>
<li><p>添加后，远程库的名字就是origin，这是Git默认的叫法，也可以改成别的，但是origin这个名字一看就知道是远程库。</p>
</li>
<li><p>下一步，就可以把本地库的所有内容推送到远程库上</p>
<pre><code>git push -u origin master
</code></pre><p>  <img src="/2017/11/28/学习Git（三） 之 远程仓库/推送.png" alt=""></p>
<p>  可以看到，你本地的代码就推送到远程仓库了推送成功后</p>
<p> 由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。可以立刻在GitHub页面中看到远程库的内容已经和本地一模一样：</p>
<p> <img src="/2017/11/28/学习Git（三） 之 远程仓库/推送成功.png" alt=""></p>
</li>
<li><p>从现在起，只要本地作了提交，就可以通过命令</p>
<pre><code>git push origin master
</code></pre><p>把本地master分支的最新修改推送至GitHub，现在，你就拥有了真正的分布式版本库！</p>
</li>
</ol>
<h2 id="从远程库克隆"><a href="#从远程库克隆" class="headerlink" title="从远程库克隆"></a>从远程库克隆</h2><p>我们讲了先有本地库，后有远程库的时候，如何关联远程库。现在，假设我们从零开发，那么最好的方式是先创建远程库，然后，从远程库克隆。</p>
<ol>
<li><p>首先，登陆GitHub，创建一个新的仓库，名字叫gitskills：</p>
<p> <img src="/2017/11/28/学习Git（三） 之 远程仓库/创建远程仓库2.png" alt=""></p>
<p> 我们勾选Initialize this repository with a README，这样GitHub会自动为我们创建一个README.md文件。创建完毕后，可以看到README.md文件：</p>
<p> <img src="/2017/11/28/学习Git（三） 之 远程仓库/README.png" alt=""></p>
</li>
<li><p>现在，远程库已经准备好了，下一步是用命令git clone克隆一个本地库</p>
<pre><code>sudo git clone https://github.com/Litxiaosa/gitskills.git
</code></pre><p> <img src="/2017/11/28/学习Git（三） 之 远程仓库/克隆成功2.png" alt=""></p>
<p>注意把Git库的地址换成你自己的，然后进入gitskills目录看看，已经有<br>README.md文件了。</p>
<p>如果有多个人协作开发，那么每个人各自从远程克隆一份就可以了。</p>
</li>
</ol>
<h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a><strong>小结</strong></h1><ol>
<li><p>要关联一个远程库，使用命令 <code>git remote add origin git@server-name:path/repo-name.git</code></p>
</li>
<li><p>关联后，使用命令 <code>git push -u origin master</code> 第一次推送master分支的所有内容</p>
</li>
<li><p>此后，每次本地提交后，只要有必要，就可以使用命令 <code>git push origin master</code> 推送最新修改</p>
</li>
</ol>
]]></content>
      
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[学习Git（二）之 暂存区]]></title>
      <url>/2017/11/28/%E5%AD%A6%E4%B9%A0Git%EF%BC%88%E4%BA%8C%EF%BC%89%E4%B9%8B%20%E6%9A%82%E5%AD%98%E5%8C%BA/</url>
      <content type="html"><![CDATA[<h2 id="工作区和暂存区"><a href="#工作区和暂存区" class="headerlink" title="工作区和暂存区"></a>工作区和暂存区</h2><p>Git和其他版本控制系统如SVN的一个不同之处就是有暂存区的概念。</p>
<a id="more"></a>
<p>先来看名词解释。</p>
<h3 id="工作区（Working-Directory）"><a href="#工作区（Working-Directory）" class="headerlink" title="工作区（Working Directory）"></a><strong>工作区（Working Directory）</strong></h3><p>就是你在电脑里能看到的目录，比如我的GitRepository文件夹就是一个工作区：</p>
<p><img src="/2017/11/28/学习Git（二）之 暂存区/工作区.png" alt=""></p>
<h3 id="版本库（Repository）"><a href="#版本库（Repository）" class="headerlink" title="版本库（Repository）"></a><strong>版本库（Repository）</strong></h3><p>工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。</p>
<p>Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD。</p>
<p><img src="/2017/11/28/学习Git（二）之 暂存区/Repository.jpeg" alt=""> </p>
<p>前面说了我们把文件往Git版本库里添加的时候，是分两步执行的：</p>
<p>第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；</p>
<p>第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。</p>
<p>因为我们创建Git版本库时，Git自动为我们创建了唯一一个master分支，所以，现在，git commit就是往master分支上提交更改。</p>
<p>你可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。</p>
<p>所以，git add命令实际上就是把要提交的所有修改放到暂存区（Stage），然后，执行git commit就可以一次性把暂存区的所有修改提交到分支。</p>
<h2 id="撤销操作"><a href="#撤销操作" class="headerlink" title="撤销操作"></a>撤销操作</h2><ol>
<li><p>如果你文件只是在工作区修改了，但是还没提交到暂存区的时候，你可以用下面的命令来撤销。</p>
<pre><code>git checkout -- [file]
</code></pre><p> 比如，你有一个文件叫demo.txt, 里面的内容为：Today is Tuesday。 并且这句话已经提交到暂存区。 此时，你又在工作区修改了demo.txt 这个文件， 内容增加了一句：I don’t know what to say </p>
<p> 然后执行git checkout – demo.txt命令,你会发现demo.txt内容又变成Today is Tuesday了。</p>
<pre><code>git checkout -- demo.txt
</code></pre><p> git checkout – file命令中的–很重要，没有–，就变成了“切换到另一个分支”的命令。</p>
</li>
<li><p>假如你文件在工作区修改了,并且也执行 <code>git add</code> 命令提交给暂存区了，但是，还没有执行commit操作。那么执行上面的 <code>git checkout -- [file]</code> 已经无效了，因为工作区跟暂存区已经一样了，再怎么覆盖内容也一样，这时候就应该使用 <code>git reset HEAD</code> 命令来撤销。</p>
<pre><code>git reset HEAD demo.txt
</code></pre><p> 还记得如何丢弃工作区的修改吗？</p>
<pre><code>git checkout -- demo.txt
</code></pre><p> 回头看看添加的内容是不是又回滚了？</p>
</li>
<li><p>现在，假设你不但改错了东西，还从暂存区提交到了版本库，怎么办呢？还记得版本回退吗？可以回退到上一个版本。不过，这是有条件的，就是你还没有把自己的本地版本库推送到远程。</p>
</li>
</ol>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p> 场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout – file</p>
<p> 场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。</p>
<p> 场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退，不过前提是没有推送到远程库。</p>
]]></content>
      
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[学习Git（一）之 入门]]></title>
      <url>/2017/11/28/%E5%AD%A6%E4%B9%A0Git%EF%BC%88%E4%B8%80%EF%BC%89%E4%B9%8B%20%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<p><strong>本系列文章基于Mac系统</strong></p>
<p>之前自己搭建博客的时候使用到GitHub，需要使用git进行版本控制，现在很多公司也在使用Git，发现Git很棒，于是学习了解一下Git。这只是我自己的学习笔记，如果你是大神，请你不吝赐教，如果你也是小白，希望这系列文章能帮到你。</p>
<a id="more"></a>
<h2 id="安装并配置Git"><a href="#安装并配置Git" class="headerlink" title="安装并配置Git"></a>安装并配置Git</h2><ol>
<li><p>要使用Git，第一步当然是安装Git了。</p>
<p>首先，打开终端输入一下命令，看你是否安装了Git</p>
<pre><code>git --version
</code></pre><p>如果没有安装，那么请下载安装 <a href="https://git-scm.com/download" target="_blank" rel="noopener">Git客户端</a>， 选择你自己的系统下载安装即可。</p>
</li>
<li><p>当安装完Git应该做的第一件事就是设置你的用户名称与邮件地址。 这样做很重要，因为每一个Git的提交都会使用这些信息，并且它会写入到你的每一次提交中，不可更改：</p>
<pre><code>git config --global user.name &quot;你的名字&quot;
git config --global user.email 你的邮箱
</code></pre><p> 如果使用了 –global 选项，那么该命令只需要运行一次，因为之后无论你在该系统上做任何事情， Git 都会使用这些信息。 当你想针对特定项目使用不同的用户名称与邮件地址时，可以在那个项目目录下运行不使用 –global 选项的命令来配置。</p>
</li>
<li><p>检查配置信息<br> 如果你不确定你的信息是不是配置成功了，可以输入一下命令查看</p>
<pre><code>git config --list
</code></pre><p> 如果你觉得返回的信息太多，也可以输入<code>git config &lt;key&gt;：</code><br> 查询指定的配置，例如:</p>
<pre><code>git config user.name

git config user.email
</code></pre></li>
</ol>
<h2 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h2><p>什么是版本库呢？版本库又名仓库，英文名repository，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。    </p>
<p>创建一个版本库非常简单，首先，选择一个合适的地方，创建一个空目录，直接新建文件夹即可，然后cd 到该文件夹下，执行下面的命令</p>
<pre><code>git init
</code></pre><p> <img src="/2017/11/28/学习Git（一）之 入门/创建仓库.png" alt="">       </p>
<p>瞬间Git就把仓库建好了，而且告诉你是一个空的仓库（empty Git repository），细心的读者可以发现当前目录下多了一个.git的目录，这个目录是Git来跟踪管理版本库的，没事千万不要手动修改这个目录里面的文件，不然改乱了，就把Git仓库给破坏了。</p>
<p>如果你没有看到.git目录，那是因为这个目录默认是隐藏的，用ls -ah命令就可以看见。</p>
<h2 id="提交文件到版本库"><a href="#提交文件到版本库" class="headerlink" title="提交文件到版本库"></a>提交文件到版本库</h2><p>上面把git仓库搭建好了，现在就来试试添加文件到版本库里面。</p>
<p>创建一个txt文档起名叫做demo.txt，往里面添加一点内容 Hello Git</p>
<p><strong>注意:这里需要文件是UTF-8格式的。</strong></p>
<p>一定要放到GitRepository目录下（子目录也行），因为这是一个Git仓库，放到其他地方Git再厉害也找不到这个文件。</p>
<p>第一步，用命令git add告诉Git，把文件添加到仓库：</p>
<pre><code>git add demo.txt
</code></pre><p> 执行上面的命令，没有任何显示，这就对了，Unix的哲学是“没有消息就是好消息”，说明添加成功。</p>
<p>第二步，用命令git commit告诉Git，把文件提交到仓库：</p>
<pre><code>git commit -m &quot;first commit&quot;
</code></pre><p>-m 参数是用来注释你提交的信息的，这样以后才知道这次提交更改了什么</p>
<p><img src="/2017/11/28/学习Git（一）之 入门/提交.png" alt="">   </p>
<h2 id="查看当前新增或者修改的文件"><a href="#查看当前新增或者修改的文件" class="headerlink" title="查看当前新增或者修改的文件"></a>查看当前新增或者修改的文件</h2><p>实际使用中你不止提交一个文件，或新增或修改多个文件，可能时间一久就忘了有多少文件需要提交。</p>
<p>这里模拟一下，首先新建一个hello.txt的文件，然后修改demo.txt内容，添加一句come on</p>
<p>这样就有2个文件需要提交了。</p>
<p>我们使用git status命令来查看当前状态,是否有未提交的文件</p>
<pre><code>git status
</code></pre><p><img src="/2017/11/28/学习Git（一）之 入门/修改.png" alt=""> </p>
<p>如图，可以看到一个demo.txt被修改过了，但还没有准备提交的修改，另外一个是Untracked files: hello.txt，表示新增的文件。</p>
<p>这时候准备把上面2个文件都提交，使用命令:</p>
<pre><code>git add demo.txt
git add hello.txt
</code></pre><p>或者你嫌弃文件太多，一次次add感觉很麻烦，那么可以试试使用git add . 提交，.表示提交当前目录所有文件</p>
<pre><code>git add .
git commit -m &quot;second commit&quot;
</code></pre><p>提交后再使用git status命令查看下</p>
<p><img src="/2017/11/28/学习Git（一）之 入门/查看.png" alt=""></p>
<p>如图，可以看到文件提交到仓库了，并且git status后提示nothing to commit, working directory clean，说明当前没有需要提交的修改，工作目录是干净。</p>
<h2 id="查看历史提交记录"><a href="#查看历史提交记录" class="headerlink" title="查看历史提交记录"></a>查看历史提交记录</h2><p>有时候你想看看之前提交的历史纪录~那么就需要使用到下面的命令：</p>
<pre><code>git log
</code></pre><p><img src="/2017/11/28/学习Git（一）之 入门/历史记录.png" alt=""></p>
<p>如图，可以看到我们提交的2次历史，first commit和second commit。历史纪录是根据时间倒叙排列的。</p>
<p>如果觉得代码太多了，加点过滤就行</p>
<pre><code>git log --pretty=oneline
</code></pre><p><img src="/2017/11/28/学习Git（一）之 入门/过滤.png" alt=""></p>
<h2 id="回滚版本"><a href="#回滚版本" class="headerlink" title="回滚版本"></a>回滚版本</h2><p>现在我们准备把demo.txt回退到上一个版本，也就是“first commit”的那个版本，怎么做呢？</p>
<p>首先，Git必须知道当前版本是哪个版本，在Git中，用HEAD表示当前版本，也就是最新的提交2c49a55···9a9a13c（注意我的提交ID和你的肯定不一样）， 就是上图中那一大长串字符，上一个版本就是 <code>HEAD^</code>，上上一个版本就是 <code>HEAD ^^</code>，当然往上100个版本写 <code>100个^</code> 比较容易数不过来，所以写成HEAD~100。</p>
<p>现在，我们要把当前版本“second commit”回退到上一个版本“first commit”，就可以使用git reset命令：</p>
<pre><code>git reset --hard HEAD^
</code></pre><p><img src="/2017/11/28/学习Git（一）之 入门/回退1.png" alt=""></p>
<p>看看第二次提交的helllo.txt 是不是不见了，demo.txt里面的内容是不是也变了？ 好比你从21世纪坐时光穿梭机来到了19世纪，想再回去已经回不去了，肿么办？</p>
<p>办法其实还是有的，只要上面的命令行窗口还没有被关掉，你就可以顺着往上找啊找啊，找到那个second commit的commit id是2c49a55···9a9a13c，于是就可以指定回到未来的某个版本：</p>
<pre><code>git reset --hard 2c49a5503041f562e8dfbf
</code></pre><p>版本号没必要写全，前几位就可以了，Git会自动去找。当然也不能只写前一两位，因为Git可能会找到多个版本号，就无法确定是哪一个了。</p>
<p><img src="/2017/11/28/学习Git（一）之 入门/回退2.png" alt=""></p>
<p>果然， 老子又回来了！</p>
<p>现在，你回退到了某个版本，关掉了电脑，第二天早上就后悔了，想恢复到新版本怎么办？找不到新版本的commit id怎么办？</p>
<p>Git提供了一个命令git reflog用来记录你的每一次命令：</p>
<pre><code>git reflog
</code></pre><p><img src="/2017/11/28/学习Git（一）之 入门/回退3.png" alt=""> </p>
<p>（注：我没有再次做回滚操作） commit id 又出来了，现在，你又可以到未来了。就问你厉不厉害！</p>
<h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>好了，这一篇，我们学了Git的安装和一些基本命令操作，差不多算入门了，接下去就是继续深入学习了。</p>
]]></content>
      
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[姑苏有钟声]]></title>
      <url>/2017/10/31/%E5%A7%91%E8%8B%8F%E6%9C%89%E9%92%9F%E5%A3%B0/</url>
      <content type="html"><![CDATA[<p><img src="/2017/10/31/姑苏有钟声/钟.jpg" alt=""></p>
<blockquote>
<p>如果你听歌可眼红，何以待她好偏不懂。</p>
</blockquote>
<a id="more"></a>
<p>她不会像白富美那样偶尔流露出一丝惹人厌的高傲，更不会像女屌丝那样做派发指 长相抱歉。</p>
<p>她在自己生活的圈子里优雅的生活，不会默默无闻。</p>
<p>她长得不算差，打扮得干干净净，或许不会穿的跟颁奖礼一般，但绝对会扬长避短穿出别有一番韵味。她更绝不会不自量力搭配没品。</p>
<p>她或许温婉，或许贤良，或许天真，或许任性，但这都不重要，重要的是，她很温暖，很安心。</p>
<p>可能她是你的同学，又或者是校友，又或者是陌生人，反正就在那个电光火石般的一瞬，你像一朵青春萌动的少年，看见让自己眼前一亮的女生，一种莫名的冲动，发自内心，倚仗着荷尔蒙喷薄而出。</p>
<p>你像一般电视剧演的那样，像一个侦探一样，调动了一切手段渠道，用此处略去七十八个字儿的方法彻底地认识了她。</p>
<p>上天会怜悯那些绞尽脑汁的虔诚孩子，他会轻易地突破第四维度，将两条平行线改变了轨迹，交在了一起。</p>
<p>你只知道在继续省略十万八千个字之后她会叫你傻逼会叫你神经病，会在你让她早点睡觉的时候跟你说嗯。</p>
<p>在你寂寞的单身的想要恋爱的时候，你会发现她总会匪夷所思地出现在你的脑海。</p>
<p>她或许不会天天叫你早睡早起不要熬夜，或许也不记得有纪念意义的日子，或许更不会记得你的生日，你的爱好，她也不会认识太多你身边的朋友，或许连相熟也称不上。但你会。</p>
<p>有时候你也会约她，她大多会欣然答应，但恪守本分，不远不近保持着距离，若即若离。</p>
<p>你开始期待甚至盼望每天与她的相见，就像陈小春唱的，她像个天仙，她太美了。我那么平凡…… 然后小灯泡一亮，叮得一声：她不讨厌我，肯定喜欢我～</p>
<p>傻逼了吧。</p>
<p>也许对于她来说，你只是一个可有可无的存在，多一个不多，少一个不少。这只是她的一种教养，一个习惯，或者一种本能而已。你不能否认就是有这样的姑娘，自带女神光环，她们能让周围的人都如沐春风，让异性为之深深地吸引。</p>
<p>你跟她身边其余的异性一样，就像女生面对淘宝满屏的东西，你不能说她讨厌你，但确实也挑不到喜欢的。</p>
<p>每个男生骨子里爆棚的自信心也最容易高估自己，而这些恰恰会让感觉良好的少年们自作多情自不量力自欺欺人自讨苦吃自掘坟墓自食其果自取灭亡自作孽不可活。</p>
<p>你把这个感觉转嫁到了她身上，开始无可救药地以为爱上了。</p>
<p>你开始为了她的每句话揣测推断，开始去思考她每一条状态每一个签名，即使像今天我出去玩的好开心如此这般的毫无意义。</p>
<p>你开始每天守在电脑前，看着她的头像亮起来，然后去跟她闲扯去逗她笑，尽所能地去让你开心，快乐。你每次看到冰冷的屏幕上出现她打出来的哈哈或者嘿嘿，你总是盯着屏幕傻呵呵地咧嘴笑。你会反复在脑海里意淫般地勾画出你们俩个人在一起的情形。</p>
<p>你会抵挡不住见她的冲动不在乎跑多少公里，看到她的时候你会觉得这几千公里跟孙猴子一个筋斗那样不值一提。你会挖空心思地对她好，好到用语言描述出来都略显单薄但是无用。好到连你们周围的人都感觉到窒息，直到后来你才知道，太把优柔寡断投鼠忌器的磨叽当慎重的人，往往却会栽到自作聪明作茧自缚这几个字上。</p>
<p>小黄人喜欢的不是apple，而是banana。</p>
<p>对了，你是不是还会像个护食的汪星人一般，假如别的男生若是和她多聊几句，就在脑子里无数次描绘那男的被爆菊的惨状。</p>
<p>你看，说你神经病你还不愿意，你这就是神经病。</p>
<p>你还时常感谢上苍，他把两条平行线交汇在一起。但这只会让你记得交汇那一瞬她蹦蹦跳跳像个小猴子般的身影，和你脑子里那被风吹起的刘海。</p>
<p>你来到她的城市，走过她来时的路，然后，相交线就会渐行渐远。</p>
<p>到这里，你心里一定会跟千万只草泥马奔腾而过一样吧，老天爷办事儿，远他妈的不是你想的路数。</p>
<p>在我收集的剪报里，有大致如下几段话：你那时应该知道，如果一个人真的爱你，她一定会告诉你，至少会表现出来，而不是让你自己胡乱猜测的被感觉左右。和这位姑娘相处，本身就是一件很美好的事。你只是没给自己留一点可进退的余地，后悔莫及。你因为一厢情愿，搭上了自己的一片真心。没人不怪你看不透，只是因为你太需要爱。当你明白你再怎么做也无力回天的时候，还是感觉这东西害了你。这位姑娘对你没感觉，而感觉是个奇妙和淘气的小家伙。</p>
<p>当你觉得一个人千般好万般好，那也许是迷恋。当你觉得她有时候很呆傻，但却傻的非常可爱，那可能是喜欢。当你看到她的每一面，包括最差的，但还不想离开她，那大概是习惯。爱没法去描述，但你永远不会错认。</p>
<p>爱就是内心的召唤而已，夜里睡不着想到她时那满心酸楚的悸动，跟她说话聊天字斟句酌的计较，面对她的时候那喷薄而出的欲望，都是爱情的原因。</p>
<p>那时有一个姑娘，懂你所有，出现在你的生命里。</p>
<p>只是错误的时间，错误的地点，遇到错误的人，却产生了对的感觉。</p>
<p>只是她身上的温暖蛊惑了你，让你误以为那就是爱情。</p>
]]></content>
      
        
        <tags>
            
            <tag> 不知所云 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[阿里巴巴Java开发规约插件]]></title>
      <url>/2017/10/25/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4Java%E5%BC%80%E5%8F%91%E8%A7%84%E7%BA%A6%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<h2 id="阿里巴巴Java开发手册"><a href="#阿里巴巴Java开发手册" class="headerlink" title="阿里巴巴Java开发手册"></a>阿里巴巴Java开发手册</h2><p>在介绍这款插件之前，先说一下《阿里巴巴Java开发手册》。2017年初，阿里巴巴官方首次公开Java代码规范标准手册，这套Java统一规范标准将有助于提高行业编码规范化水平，帮助行业人员提高开发质量和效率、大大降低代码维护成本，我第二时间（刚公开时我不知道。我也很无奈啊）下载来看。对我个人而言帮助挺大的，渐渐改掉了我好多编码的坏习惯。这个手册的愿景是这样的：</p>
<blockquote>
<p>“统一规范标准将有助于提高行业编码规范化水平，帮助行业人员提高开发质量和效率、大大降低代码维护成本”。</p>
</blockquote>
<a id="more"></a>
<p><img src="/2017/10/25/阿里巴巴Java开发规约插件/阿里巴巴开发手册.jpg" alt=""></p>
<p>到现在为止已经更新迭代了三个版本。也是阿里官方对外发布的最后一个PDF版本，我觉得是值得收藏的。</p>
<h2 id="插件简单介绍"><a href="#插件简单介绍" class="headerlink" title="插件简单介绍"></a>插件简单介绍</h2><p>阿里巴巴基于手册内容，研发了一套自动化的IDE检测插件（IDEA、Eclipse）， 该插件在扫描代码后，将不符合《手册》的代码按Blocker/Critical/Major三个等级显示在下方，甚至在IDEA上，还基于Inspection机制提供了实时检测功能，编写代码的同时也能快速发现问题所在。对于历史代码，部分规则实现了批量一键修复的功能，提升代码质量，提高团队研发效能。</p>
<p>代码已经开源，GitHub：<a href="https://github.com/alibaba/p3c" target="_blank" rel="noopener">https://github.com/alibaba/p3c</a></p>
<h2 id="插件简单教程"><a href="#插件简单教程" class="headerlink" title="插件简单教程"></a>插件简单教程</h2><p>打开 IDEA 搜索”alibaba”, 你就可以看到返回结果里有”Alibaba Java Coding Guidelines”。我这里已经下载过了。直接安装重启编译器就好，</p>
<p><img src="/2017/10/25/阿里巴巴Java开发规约插件/alibaba.jpg" alt=""></p>
<p>在项目上右键就可以看到这两个功能，点绿色按钮就扫面本项目全部的文件，如果只想扫描当前的文件，那就在当前文件上右键，那么它只扫描当前的文件。</p>
<p><img src="/2017/10/25/阿里巴巴Java开发规约插件/右键项目.jpg" alt=""></p>
<p>前面说的都是手动监测，该插件也提供了实时监测的功能，此功能是默认开启的，在你编写代码时就会实时监测，一旦有不符合规范的语句就会出现错误提示。</p>
<p>扫描代码后，不符合规约的代码会按Blocker/Critical/Major三个等级显示在下方面板中，左边是扫描出的不符合规范的代码，依次点进去可以看到是代码的多少行出现了规约问题以及哪一个规约问题，右边则是规约的详细描述及实例代码。不仅如此，右边还可以点击自动改正代码，但是并不是所有的问题都可以。有些还是需要手动改的。</p>
<h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>用了几天，说一下感受，总体而言对于我个人而言还是有帮助的，它可以帮助我慢慢改掉我编码中的坏习惯，帮助我在编码规范方面成长。那么用了它是不是会让我们代码少一些bug呢？很显然不是，它只是一个监测和提示工具。最后还得靠我们自己。</p>
<p>多说一句，该插件所用的是阿里巴巴公司的开发规范，肯定会与其他的规范有出入。如果觉得不适合公司或者自己的开发习惯，那就没必要用了。适合自己的最好。</p>
]]></content>
      
        
        <tags>
            
            <tag> 编码规范插件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[solr的配置和简单应用]]></title>
      <url>/2017/08/24/solr%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>本文基于solr-6.6 、 tomcat-9、 jdk-1.8</p>
<p>solr下载完成以后解压即可。</p>
<a id="more"></a>
<h2 id="在tomcat上安装solr"><a href="#在tomcat上安装solr" class="headerlink" title="在tomcat上安装solr"></a>在tomcat上安装solr</h2><ol>
<li><p>把solr目录下的server/solr-webapp/webapp目录拷贝到tomcat/webapps的目录下,并且重命名为solr（任意名字）</p>
</li>
<li><p>将solr\server\lib\ext下的所有jar包，以及sol\server\lib下以metrics开头的jar包复制到tomcat\webapps\solr\WEB-INF\lib下</p>
</li>
<li><p>在tomcat\webapps\webapp\WEB-INF中，新建classes文件夹，将solr\server\resources下的log4j.properties文件拷贝到里面，修改里面的solr.log=输出日志的路径（请使用/分割，注意不要有中文，避免乱码问题）</p>
</li>
<li><p>将solr\server中的solr目录拷贝到任意地方，重命名为solrHome</p>
</li>
<li><p>修改tomcat\webapps\solr\WEB-INF中的web.xml文件</p>
<p> <img src="/2017/08/24/solr的配置和简单应用/solrHome位置.png" alt=""></p>
<p> 并且注释调以下代码</p>
<p> <img src="/2017/08/24/solr的配置和简单应用/solr注释的部分.png" alt=""></p>
</li>
<li><p>启动tomcat 访问localhost:8080/solr/index.html  </p>
<p> <img src="/2017/08/24/solr的配置和简单应用/solr.png" alt=""></p>
</li>
<li>目前solrHome目录是空的，我们在solrHome目录下创建一个空文件夹core1，这个就是我们的一个实例。</li>
<li>把solr/server/solr下的文件复制到solrHome目录下。</li>
<li><p>在solr的管理控制台界面，添加一个core1</p>
<p> <img src="/2017/08/24/solr的配置和简单应用/solr添加core.png" alt=""></p>
</li>
<li><p>这下就创建成功了一个实例core1 ,注意，如果无法创建core,看一下是否执行了第8步，网上说这是bug</p>
<p><img src="/2017/08/24/solr的配置和简单应用/core1创建成功.png" alt=""></p>
</li>
</ol>
<h2 id="Ik中文分词器"><a href="#Ik中文分词器" class="headerlink" title="Ik中文分词器"></a>Ik中文分词器</h2><p> <a href="http://download.csdn.net/download/linzhiqiang0316/9537326" target="_blank" rel="noopener">下载IK分词器</a></p>
<ol>
<li>将ik-analyzer-solr5-5.x.jar这个jar包放入 tomcat/webapps/solr/WEB-INF/lib里面( 千万不要复制到tomcat/lib中，这样会找不到lucene的类)</li>
<li>将IKAnalyzer.cfg.xml，ext.dic（搜狗的扩展词库），stopword.dic放在tomcat\webapps\solr\WEB-INF\classes目录下</li>
<li><p>打开solrHome/core1/conf/managed-schema文件 添加以下配置</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;fieldType name=&quot;text_ik&quot; class=&quot;solr.TextField&quot;&gt;</span><br><span class="line">    &lt;analyzer type=&quot;index&quot; useSmart=&quot;false&quot;</span><br><span class="line">         class=&quot;org.wltea.analyzer.lucene.IKAnalyzer&quot; /&gt;</span><br><span class="line">    &lt;analyzer type=&quot;query&quot; useSmart=&quot;true&quot;</span><br><span class="line">        class=&quot;org.wltea.analyzer.lucene.IKAnalyzer&quot; /&gt;</span><br><span class="line">&lt;/fieldType&gt;</span><br></pre></td></tr></table></figure>
<p> <img src="/2017/08/24/solr的配置和简单应用/ik分词器.png" alt=""></p>
</li>
<li><p>重启tomcat，即可看到text_ik分词</p>
</li>
</ol>
<h2 id="域"><a href="#域" class="headerlink" title="域"></a>域</h2><ol>
<li><p>插入的文档必须与域相匹配</p>
<p>  域，它在solr中有特定的含义，就类似于数据库表中的列 ，规范着写入的数据。我们先来做个例子。</p>
<p> <img src="/2017/08/24/solr的配置和简单应用/solr演示1.png" alt=""></p>
<p>  可以看到，这次插入的文档，有id，title。当然，在solr中，每一条记录都必须有着一个唯一的id，它就类似数据库中的主键，不可重复。这条记录的插入是成功的。<br>但是，如果我把title改成title1,这就与定义的字段不一样了，就会报错,可以看到，这里提示，未知的字段 title1.</p>
<p><img src="/2017/08/24/solr的配置和简单应用/solr演示2.png" alt=""></p>
</li>
<li><p>域的定义 field</p>
<p> 先拿出来一条配置来看一下</p>
 <field name="id" type="string" indexed="true" stored="true" required="true" multivalued="false">

<p> 首先，我们认识一下这些属性</p>
<blockquote>
<p>name: 域名<br>type: 域的类型，必须匹配类型，不然会报错<br>indexed: 是否要做索引<br>stored: 是否要储存<br>required: 是否必填<br>multiValued：是否多值，如果设置为多值，里面的值就会采用数组的方式储存</p>
</blockquote>
</field></li>
<li><p>动态域 dynamicField</p>
<p> 同样，我们拿出一条来看</p>
<pre><code>&lt;dynamicField name=&quot;*_i&quot;  type=&quot;string&quot;    indexed=&quot;true&quot;  stored=&quot;true&quot; multiValued=&quot;true&quot; /&gt;
</code></pre><p> 那么，什么是动态域呢？ 就是这个域的名称，是由表达式组成的，只要名称满足了这个表达式，就可以用这个域</p>
<p> 同样的认识一下这些属性</p>
<blockquote>
<p>name: 域的名称，该域的名称是通过一个表达式来指定的，只要符合这这个规则，就可以使用这个域<br>type: 对应的值类型，相应的值必须满足这个类型，不然就会报错<br>indexed: 是否要索引<br>stored: 是否要存储<br>…其它的属性与上边的一致</p>
</blockquote>
</li>
<li><p>主键域 uniqueKey</p>
<pre><code>&lt;uniqueKey&gt;id&lt;/uniqueKey&gt;
</code></pre><p> 指定一个唯一的主键，每一个文档中，都应该有一个唯一的主键，这个值不要随便改</p>
</li>
<li><p>复制域 copeField</p>
<pre><code>&lt;copyField source=&quot;cat&quot; dest=&quot;text&quot;/&gt;

&lt;field name=&quot;text&quot; type=&quot;string&quot; indexed=&quot;true&quot; stored=&quot;true&quot; multiValued=&quot;true&quot;/&gt;
</code></pre><blockquote>
<p>source: 源域<br>dest: 目标域</p>
</blockquote>
<p> 复制域，将源域的内容复制到目标域中</p>
<p> <strong>注意：目标域必须是允许多值的，如下，multiValued必须为true，因为可能多个源域对应一个目标域，所以它需要以数组来存储</strong></p>
</li>
<li><p>域的类型</p>
<p> 同样的给出一段配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;fieldType name=&quot;text_general&quot; class=&quot;solr.TextField&quot; positionIncrementGap=&quot;100&quot;&gt;</span><br><span class="line">    &lt;analyzer type=&quot;index&quot;&gt;</span><br><span class="line">        &lt;tokenizer class=&quot;solr.StandardTokenizerFactory&quot;/&gt;</span><br><span class="line">        &lt;filter class=&quot;solr.StopFilterFactory&quot; ignoreCase=&quot;true&quot; words=&quot;stopwords.txt&quot; /&gt;</span><br><span class="line">         &lt;!-- in this example, we will only use synonyms at query time</span><br><span class="line">         &lt;filter class=&quot;solr.SynonymFilterFactory&quot; synonyms=&quot;index_synonyms.txt&quot; ignoreCase=&quot;true&quot; expand=&quot;false&quot;/&gt;--&gt;</span><br><span class="line">         &lt;filter class=&quot;solr.LowerCaseFilterFactory&quot;/&gt;</span><br><span class="line">     &lt;/analyzer&gt;</span><br><span class="line">     </span><br><span class="line">     &lt;analyzer type=&quot;query&quot;&gt;</span><br><span class="line">        &lt;tokenizer class=&quot;solr.StandardTokenizerFactory&quot;/&gt;</span><br><span class="line">        &lt;filter class=&quot;solr.StopFilterFactory&quot; ignoreCase=&quot;true&quot; words=&quot;stopwords.txt&quot; /&gt;</span><br><span class="line">        &lt;filter class=&quot;solr.SynonymFilterFactory&quot; synonyms=&quot;synonyms.txt&quot; ignoreCase=&quot;true&quot;  expand=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;filter class=&quot;solr.LowerCaseFilterFactory&quot;/&gt;</span><br><span class="line">    &lt;/analyzer&gt;</span><br><span class="line">&lt;/fieldType&gt;</span><br></pre></td></tr></table></figure>
<p> 介绍一下这些属性</p>
<blockquote>
<p>name: 域的名称<br>class: 指定solr的类型<br>analyzer: 分词器的配置<br>type: index(索引分词器)，query(查询分词器)<br>tokenizer: 配置分词器<br>filter: 过滤器</p>
</blockquote>
<p>所有上述域，都可以在solrHome/core1/conf/managed-schema文件里找到。</p>
</li>
</ol>
<h2 id="字段的实际配置"><a href="#字段的实际配置" class="headerlink" title="字段的实际配置"></a>字段的实际配置</h2><p>首先，打开solrHome/core1/conf/managed-schema文件 </p>
<p><img src="/2017/08/24/solr的配置和简单应用/managed-schema.png" alt=""></p>
<ol>
<li><p>我们用field来配置实际的业务字段</p>
<p> 上边我们配置了中文分词器，已经配置了一个fieldType的中文分词，所 以我们现在一律用中文分词的域类型</p>
<p><img src="/2017/08/24/solr的配置和简单应用/product实体.png" alt=""></p>
<p>主键的id就不需要配置了，默认已经把id配置为主键了</p>
<pre><code>&lt;field name=&quot;id&quot; type=&quot;string&quot; indexed=&quot;true&quot; stored=&quot;true&quot; required=&quot;true&quot; multiValued=&quot;false&quot; /&gt;
</code></pre><p>商品名称(需要分词，需要存储)</p>
<pre><code>&lt;field name=&quot;product_name&quot; type=&quot;text_ik&quot; indexed=&quot;true&quot; stored=&quot;true&quot;/&gt;
</code></pre><p>商品图片(不需要分词，需要存储)</p>
<pre><code>&lt;field name=&quot;product_url&quot; type=&quot;string&quot; indexed=&quot;false&quot; stored=&quot;true&quot;/&gt;
</code></pre><p>商品价格(不需要分词，需要存储)</p>
<pre><code>&lt;field name=&quot;product_price&quot; type=&quot;double&quot; indexed=&quot;false&quot; stored=&quot;true&quot;/&gt;
</code></pre><p>商品分类(不需要分词，需要存储)</p>
<pre><code>&lt;field name=&quot;product_type&quot; type=&quot;int&quot; indexed=&quot;false&quot; stored=&quot;true&quot;/&gt;
</code></pre><p>商品描述(需要分词，需要存储)</p>
<pre><code>&lt;field name=&quot;product_description&quot; type=&quot;text_ik&quot; indexed=&quot;true&quot; stored=&quot;true&quot;/&gt;    
</code></pre><p><img src="/2017/08/24/solr的配置和简单应用/普通域.png" alt=""></p>
</li>
<li><p>复制域的应用</p>
<p> 用户在搜索框搜索的时候，有可能输入的是商品名称，也有可能输入的是商品描述，也有可能输入的是一个商品类型，那么这些值的搜索，肯定在后台是对应一个域的，那么既然如此，我们就可以把这些域合并成一个，这样在后台只需要单独的对这一个域进行搜索就可以了</p>
<p> 先定义一个目标域</p>
<pre><code>&lt;field name=&quot;aim&quot; type=&quot;text_ik&quot; indexed=&quot;true&quot; stored=&quot;false&quot;  multiValued=&quot;true&quot;/&gt;
</code></pre><p> <img src="/2017/08/24/solr的配置和简单应用/目标域aim.png" alt=""></p>
<p> 复制域，把商品名称，商品描述，商品类型名称复制到上面的这个域中 </p>
<p> <img src="/2017/08/24/solr的配置和简单应用/复制域.png" alt="">  </p>
</li>
</ol>
<pre><code>&lt;copyField source=&quot;product_name&quot; dest=&quot;aim&quot;/&gt;
&lt;copyField source=&quot;product_type&quot; dest=&quot;aim&quot;/&gt;
&lt;copyField source=&quot;product_description&quot; dest=&quot;aim&quot;/&gt;
</code></pre><h1 id="dataimport-导入数据库数据"><a href="#dataimport-导入数据库数据" class="headerlink" title="dataimport 导入数据库数据"></a><strong>dataimport 导入数据库数据</strong></h1><p>solr默认是没有开启dataimport这个功能的，所以我们要经过一点配置来开启它</p>
<ol>
<li><p>首先找到solr/dist/solr-dataimporthandler-6.6.0.jar，把这个文件复制到tomcat/webapp/solr/WEB-INF/ lib/下(前面拷贝过的忽略此操作)。并且找到相应数据库的驱动包，也同样放到该目录。我这里用的是mysql 的驱动</p>
</li>
<li><p>找到solrHome/core1/conf/solrconfig.xml，并打开，在里面添加一段内容</p>
<pre><code>&lt;requestHandler name=&quot;/dataimport&quot; class=&quot;solr.DataImportHandler&quot;&gt;
    &lt;lst name=&quot;defaults&quot;&gt;
        &lt;str name=&quot;config&quot;&gt;data-config.xml&lt;/str&gt;
    &lt;/lst&gt;
&lt;/requestHandler&gt;
</code></pre><p><img src="/2017/08/24/solr的配置和简单应用/导入数据.png" alt=""></p>
</li>
<li><p>找到solr/example/example-DIH/solr/db/conf/db-data-config.xml，把其复制到solrHome/core1/conf/下，并改名为data-config.xml. 打开并编辑，修改如下</p>
<pre><code>&lt;dataConfig&gt;
    &lt;!--这是mmysql的配置--&gt;
    &lt;dataSource driver=&quot;com.mysql.jdbc.Driver&quot; url=&quot;jdbc:mysql://localhost:3306/solr&quot; user=&quot;你的账号&quot; password=&quot;你的密码&quot;/&gt;
    &lt;document&gt;
        &lt;!-- name属性，就代表着一个文档，可以随便命名 --&gt;
        &lt;!-- query是一条sql，代表在数据库查找出来的数据 --&gt;
        &lt;entity name=&quot;product&quot; query=&quot;select * from product&quot;&gt;
            &lt;!-- 每一个field映射着数据库中列与文档中的域，column是数据库列，name是solr的域(必须是在managed-schema文件中配置过的域才行) --&gt;
            &lt;field column=&quot;id&quot; name=&quot;id&quot;/&gt;
            &lt;field column=&quot;name&quot; name=&quot;product_name&quot;/&gt;
            &lt;field column=&quot;url&quot; name=&quot;product_url&quot;/&gt;
            &lt;field column=&quot;price&quot; name=&quot;product_price&quot;/&gt;
            &lt;field column=&quot;type&quot; name=&quot;product_type&quot;/&gt;
            &lt;field column=&quot;description&quot; name=&quot;product_description&quot;/&gt;
        &lt;/entity&gt;
    &lt;/document&gt;
&lt;/dataConfig&gt;
</code></pre><p><img src="/2017/08/24/solr的配置和简单应用/dataconfig.png" alt=""></p>
</li>
<li><p>重启tomcat， 会看到如下页面</p>
<p><img src="/2017/08/24/solr的配置和简单应用/execute.png" alt=""></p>
</li>
<li><p>点击蓝色的按钮，则开始导入，导入过程依据数量量的大小，需要的时间也不同，可以点击右边的Refresh status来刷新状态，可以查看当前导入了多少条</p>
</li>
</ol>
<h1 id="solrJ的使用"><a href="#solrJ的使用" class="headerlink" title="solrJ的使用"></a><strong>solrJ的使用</strong></h1><p>现在说一下使用solrj来维护solr的索引及操作，solrj就是一个java的客户端，是一个jar包的使用，首先引入MAVEN的依赖，solrj的版本号要对应solr的版本号</p>
<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.apache.solr&lt;/groupId&gt;
    &lt;artifactId&gt;solr-solrj&lt;/artifactId&gt;
    &lt;version&gt;6.6.0&lt;/version&gt;
&lt;/dependency&gt;
</code></pre><ol>
<li><p>增加及修改</p>
<p> 在solr中，增加与修改都是一回事，当这个id不存在时，则是添加，当这个id存在时，则是修改</p>
<pre><code> public class SolrController {

 private String serverUrl = &quot;http://10.60.20.152:8080/solr/core1&quot;;

 public void save() throws SolrServerException, IOException {
     //创建
     HttpSolrClient client = new  HttpSolrClient(serverUrl);
     SolrInputDocument doc = new SolrInputDocument();

     doc.addField(&quot;id&quot;, &quot;5008&quot;);
     doc.addField(&quot;product_name&quot;, &quot;姓名&quot;);
     doc.addField(&quot;product_type&quot;, &quot;1&quot;);
     doc.addField(&quot;product_url&quot;, &quot;图片&quot;);
     doc.addField(&quot;product_price&quot;, &quot;11&quot;);
     doc.addField(&quot;product_description&quot;, &quot;这是一个测试例子&quot;);

     client.add(doc);
     client.commit();
     client.close();
   }
}
</code></pre></li>
<li><p>删除索引</p>
<pre><code>public class SolrController {

private String serverUrl = &quot;http://10.60.20.152:8080/solr/core1&quot;;

public void delete()throws Exception{
    HttpSolrClient client = new  HttpSolrClient(serverUrl);
    //1.删除一个
    client.deleteById(&quot;5008&quot;);

    //2.删除多个
    List&lt;String&gt; ids = new ArrayList&lt;&gt;();
    ids.add(&quot;1&quot;);
    ids.add(&quot;2&quot;);
    client.deleteById(ids);

    //3.根据查询条件删除数据,这里的条件只能有一个，不能以逗号相隔
    client.deleteByQuery(&quot;id:5008&quot;);

    //4.删除全部，删除不可恢复
    client.deleteByQuery(&quot;*:*&quot;);

    //一定要记得提交，否则不起作用
    client.commit();
    client.close();
  }
}
</code></pre></li>
<li><p>查询</p>
<pre><code> public class SolrController {

 private String serverUrl = &quot;http://10.60.20.152:8080/solr/core1&quot;;

 public void search()throws Exception{
     HttpSolrClient client = new  HttpSolrClient(serverUrl);
     //创建查询对象
     SolrQuery query = new SolrQuery();
     //q 查询字符串，如果查询所有*:*
     query.set(&quot;q&quot;, &quot;product_name:潇洒&quot;);
     //fq 过滤条件，过滤是基于查询结果中的过滤
     query.set(&quot;fq&quot;, &quot;product_type:1&quot;);
     //sort 排序，请注意，如果一个字段没有被索引，那么它是无法排序的
     //query.set(&quot;sort&quot;, &quot;product_price desc&quot;);
     //start row 分页信息，与mysql的limit的两个参数一致效果
     query.setStart(0);
     query.setRows(10);
     //fl 查询哪些结果出来，不写的话，就查询全部、
     // query.set(&quot;fl&quot;, &quot;&quot;);
     //df 默认搜索的域
     query.set(&quot;df&quot;, &quot;product_keywords&quot;);

     //高亮设置
     //开启高亮
     query.setHighlight(true);
     //高亮域
     query.addHighlightField(&quot;product_name&quot;);
     //前缀
     query.setHighlightSimplePre(&quot;&lt;span style=&apos;color:red&apos;&gt;&quot;);
     //后缀
     query.setHighlightSimplePost(&quot;&lt;/span&gt;&quot;);

     //执行搜索
     QueryResponse queryResponse = client.query(query);
     //搜索结果
     SolrDocumentList results = queryResponse.getResults();
     //查询出来的数量
     long numFound = results.getNumFound();
     System.out.println(&quot;总查询出:&quot; + numFound + &quot;条记录&quot;);

     //遍历搜索记录
     //获取高亮信息
     Map&lt;String, Map&lt;String, List&lt;String&gt;&gt;&gt; highlighting = queryResponse.getHighlighting();
     for (SolrDocument solrDocument : results) {
         System.out.println(&quot;商品id:&quot; + solrDocument.get(&quot;id&quot;));
         System.out.println(&quot;商品名称 :&quot; + solrDocument.get(&quot;product_name&quot;));
         System.out.println(&quot;商品分类:&quot; + solrDocument.get(&quot;product_type&quot;));
         System.out.println(&quot;商品价格:&quot; + solrDocument.get(&quot;product_price&quot;));
         System.out.println(&quot;商品描述:&quot; + solrDocument.get(&quot;product_description&quot;));
         System.out.println(&quot;商品图片:&quot; + solrDocument.get(&quot;product_url&quot;));

         //输出高亮
         Map&lt;String, List&lt;String&gt;&gt; map = highlighting.get(solrDocument.get(&quot;id&quot;));
         List&lt;String&gt; list = map.get(&quot;product_name&quot;);
         if(list != null &amp;&amp; list.size() &gt; 0){
             System.out.println(list.get(0));
         }
     }
     client.close();
 }
}
</code></pre></li>
</ol>
<h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a><strong>补充</strong></h1><blockquote>
<p>q - 查询字符串，如果查询所有: (id:1)<br>fq - （filter query）过虑查询，过滤条件，基于查询出来的结果<br>fl - 指定返回那些字段内容，用逗号或空格分隔多个<br>start - 分页开始<br>rows - 分页查询数据<br>sort - 排序，格式：sort=+[,+]… 。示例：（score desc, price asc）表示先 “score” 降序, 再 “price” 升序，默认是相关性降序。<br>fl表示索引显示那些field(表示所有field,如果想查询指定字段用逗号或空格隔开（如：Name,SKU,ShortDescription或Name SKU &gt;ShortDescription【注：字段是严格区分大小写的】）)<br>hl 是否高亮 ,如hl=true<br>hl.fl 高亮field ,hl.fl=Name,SKU<br>hl.simple.pre 高亮前面的格式<br>hl.simple.post 高亮后面的格式</p>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> solr </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[浮生若梦]]></title>
      <url>/2017/07/17/%E6%B5%AE%E7%94%9F%E8%8B%A5%E6%A2%A6/</url>
      <content type="html"><![CDATA[<p> <img src="/2017/07/17/浮生若梦/梦.jpg" alt=""></p>
<blockquote>
<p>浮生若梦,若梦非梦,浮生何如,如梦之梦 ——— 庄子《如梦之梦》</p>
</blockquote>
<p>你现在二十五六岁，大学毕业两三年，或者差不多研究生刚毕业。你有着一份还算凑合的工作，天天宅在冷气十足的办公室里，每个月拿到手的钱，交了房租吃了饭，所剩无几。</p>
<a id="more"></a>
<p>每天晚上六点半，当时钟跳过员工手册上写着的下班时间，你从来不会有任何的反应。</p>
<p>离开校园上班不过两三年，你已经写成了一套属于自己的作息节奏：</p>
<p>你每天晚上七点下楼，去楼下的小餐馆来一碗重庆小面吸嗦满嘴是油；七点半你上楼继续坐在办公桌前干活；你心里想着，妈蛋怎么都没有人下班，真是一群神经病；殊不知你也可能一不留神成为另一个人心中的神经病；九点半，你终于收拾东西，回到你的出租房。</p>
<p>你躺在床上，辗转反侧，寂寞难眠，你总觉的你一天什么事情都没干，青春不是应该释放激情与梦想吗？怎么看起来那么颓废。你盘算着明天就辞职，然后去自驾游，去看海，去隐居，但想到银行卡的余额，你呵呵呵呵呵笑起来，还是算了吧！</p>
<p>那些曾经的同学们都开始结婚了。你在微信里收到了一条条设计华丽带着动画和音乐的婚礼邀请函。你一边用没时间婉拒着他们的婚礼邀请，一边感叹，卧槽这么早就结婚了。</p>
<p>你想找个人谈恋爱，可是你还没准备好，在你的生命中出现另外一个人是多么的累。你根本就忘记了如何去爱。</p>
<p>你说你满怀理想，你文艺青年，你从来觉得在农家菜馆聚餐点一桌子毛血旺是一件很low的事情，你从来都厌恶一群人的娱乐生活只有去洗脚、按摩、打麻将、去KTV唱爱情买卖。</p>
<p>你觉得你想要的生活绝不是这样。</p>
<p>你穷，你却喜欢健身，喜欢吉他、喜欢巴洛克音乐与延时摄影，你坚持去健身，你坚持去听独立歌手的演出，你坚持读书。你就是这么的逼格甚高，但你每天都过得好不快乐。</p>
<p>你一直还是认为爱情是件很美好的事情，你一定要找到那个对的人，你没有主动去追逐某些人，你相信缘分。然而现在，你已经失去了好多的机会，你身边的异性们，一个个脱离单身，而你，却只能假装用”不讲究“的理由默默承受着焦虑。</p>
<p>当然，更悲剧的是，每天的枯燥的工作，和虚无缥缈的理想追求，占据了你大量的思考的时间，你已经习惯了你现在的状态。单身，对你来说是一个安全的保护区，你根本不敢去突破你的保护区，你觉得你根本没经济接受你的生命中多出来的那个人。</p>
<p>你一无所有，在大城市里你没有房子和车子，你没有时间，没有喜欢的人，没有理想；你离家千里，你忘了自己当时为什么路途遥遥来到这里，住在这租来的小房子里，却每天只是为了在这里睡上一觉。</p>
<p>其实你一直觉得自己还很年轻。你才毕业两三年，你在任何的职业发展中都只是一个初级的小白。可是你却发现，一切都变得和以前完全不一样了，见到好久不见老朋友，你不会再和他互骂傻逼，不会再和他深夜饮酒不醉不归，不会再和他骑行百公里，只为去想去的地方看一看大海。如今的你，和他一壶清茶，聊起的话题，都是关于工作、婚姻和财富自由。你终于变成了你以前所讨厌的那个能在众人面前谈笑风生好几个小时，讲着一个丑的不行的PPT自嗨的不行的那个人。</p>
<p>你从未想过，这一切，居然变得那么快。</p>
<p>你身边的朋友，买车了、买房了、辞职了、环游世界了、家里拆迁了、创业了融资了、结婚了。每一天，你的内心都在经受着来自他人的波澜。你无奈，你沮丧，你迷失了自己。在你的出租房的公用卫生间里，刷牙洗脸，你看着墙壁上镜子中的自己：又丑又穷；一口漱口水吐掉之后，你终于自言自语对自己说：“难怪没有人喜欢我”。</p>
<p>那么，然后呢？</p>
<p>就这样随波逐流，还是做出改变，还是坚持自我呢？</p>
<p>人生如戏，或者是孤独地像条狗，或者是假装合群扮小丑，都是你自己的选择。</p>
]]></content>
      
        
        <tags>
            
            <tag> 不知所云 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[风景旧曾谙]]></title>
      <url>/2017/06/30/%E9%A3%8E%E6%99%AF%E6%97%A7%E6%9B%BE%E8%B0%99/</url>
      <content type="html"><![CDATA[<p><img src="/2017/06/30/风景旧曾谙/江南.png" alt=""></p>
<p>七月将至， 天气慢慢炎热而躁动。来杭州已九月有余。</p>
<p>初来杭州，怀着美好的憧憬一心想去走走，看许仙和白娘子相遇的断桥，看充满神话色彩的雷峰塔。看济公修行之地灵隐寺等等。</p>
<p>然而始终未曾迈出一步。一来公司996累成狗，二来无人同行，感觉会少很多乐趣。</p>
<a id="more"></a>
<p>上班、吃饭、下班、睡觉的机械日子就这样慢慢过去了。</p>
<p>人嘛，总会厌烦浑浑噩噩的生活，我开始买了很多书，东野圭吾的，三毛的，韩寒的，余华的等等。开始充实自己，除了代码外，我开始享受这些，不说提高什么，觉得比下班打游戏看电视有意义些。</p>
<p>说起健身，还是合租的一个姑娘带我去的。她说要去减肥，我说，走，我也去，我要去增肥。她鄙视我说等我真的增肥成功了，想减肥就难了。然而，一个月过去了，我体重一毛没增加。但是胳膊和胸部的肌肉稍微有一丢丢凸显了。这也是成果。不能急，我相信胸肌会有的，腹肌也会有的。</p>
<p>换了公司，自由时间也多了。慢慢培养起来的爱好和习惯，更有时间和理由去坚持了，决定出去走走，把刚来杭州的憧憬，一点点实现。 不为别的，我只是不想满足于现状。</p>
<p>和朋友扯淡的时间慢慢少了，有时偶尔聊起天来，他们会说，最近跟灭绝了似的。“哈哈。是的，我在努力提高自己，寻找我的意中人 ”我笑。</p>
<p>可能是代码写多了，感觉世界的逻辑有时很简单。</p>
<p>事情无非是let，变化历历</p>
<p>或者是const，永恒安息</p>
<p>如果一开始就想清楚，留不住的就随风去，不会变的就钉到骨子里。那你说多轻松。</p>
<p>打雷了，杭州的天总是这样，大太阳说下雨就下雨，也凉快了不少。</p>
<p>偌大的杭州，一个人独来独往。不过每一天过的也很充实。江南好， 风景旧曾谙。我喜欢。</p>
<p><img src="/2017/06/30/风景旧曾谙/鸟.jpg" alt=""></p>
]]></content>
      
        
        <tags>
            
            <tag> 不知所云 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MAC下配置环境变量]]></title>
      <url>/2017/06/25/MAC%E4%B8%8B%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
      <content type="html"><![CDATA[<h2 id="配置JAVA环境变量"><a href="#配置JAVA环境变量" class="headerlink" title="配置JAVA环境变量"></a>配置JAVA环境变量</h2><p>大家在windows里面配置JDK环境变量很容易，但是如果要在mac里面配置JDK环境变量和windows里面有所不同,虽然Mac自带有jdk,但是版本比较低。我们讲的是自己下载的jdk。</p>
<a id="more"></a>
<p>jdk的下载路径， Library:就是资源库</p>
<pre><code>/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home  
</code></pre><p>打开配置文件 .bash_profile</p>
<pre><code>open .bash_profile
</code></pre><p>如果没有 .bash_profile ,创建文件后打开</p>
<pre><code>touch .bash_profile
</code></pre><p>把下面的代码复制进去, <strong>注意替换成你的jdk版本</strong></p>
<pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home</span><br><span class="line"></span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line"></span><br><span class="line">export $JAVA_HOME/bin:$PATH:</span><br></pre></td></tr></table></figure>
</code></pre><p>然后保存并退出 .bash_profile</p>
<p>输入 source .bash_profile 使修改生效</p>
<p>使用如下命令查看环境变量是否已经配置成功：</p>
<pre><code>echo $JAVA_HOME
</code></pre><p>如果出现下图，说明配置成功了</p>
<pre><code>![](MAC下配置环境变量/jdk配置成功.png)
</code></pre><h2 id="配置maven环境变量"><a href="#配置maven环境变量" class="headerlink" title="配置maven环境变量"></a>配置maven环境变量</h2><p>打开终端输入 open .bash_profile</p>
<p>输入Maven安装包路径, 注意替换成你的解压路径</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export M2_HOME=/Library/apache-maven-3.5.0</span><br><span class="line"></span><br><span class="line">export PATH=$PATH:$M2_HOME/bin</span><br></pre></td></tr></table></figure>
<p>保存修改并关闭 .bash_profile </p>
<p>输入 source .bash_profile 使修改生效</p>
<p>输入 mvn -v 验证Maven是否配置成功，如果显示Maven版本信息则配置成功。 </p>
<p><img src="/2017/06/25/MAC下配置环境变量/maven.png" alt=""></p>
]]></content>
      
        
        <tags>
            
            <tag> 环境变量 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo绑定域名]]></title>
      <url>/2017/06/24/hexo%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/</url>
      <content type="html"><![CDATA[<p>因为Hexo个人博客是托管在github之上，每次访问都要使用githubname.github.io这么一个长串的域名来访问，会显得非常繁琐。这个时候我们可以购买一个域名，设置DNS跳转，以达到通过域名即可访问我们的个人博客。通过查阅文档发现，github pages是支持域名绑定的。</p>
<a id="more"></a>
<h2 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h2><p>国内国外有很多的域名供应商，选择一个好的机构购买域名，我是在阿里的万网购买的。通过搜索找到自己喜欢的域名，然后加入清单，然后去付款就好了。</p>
<p>现在你的域名还处于sever状态，你需要去实名认证，上传你的身份证正面照就好了，官方说3～5个工作日，不过我的一天就认证好了。</p>
<p>然后你需要进行域名解析。进入<a href="https://account.aliyun.com/login/login.htm?oauth_callback=https%3A%2F%2Fhome.console.aliyun.com%2Fnew#/" target="_blank" rel="noopener">阿里云控制台</a></p>
<p><img src="/2017/06/24/hexo绑定域名/域名.png" alt=""></p>
<p>点击域名，进入下图页面</p>
<p><img src="/2017/06/24/hexo绑定域名/域名解析.png" alt=""></p>
<p>点击解析</p>
<p><img src="/2017/06/24/hexo绑定域名/域名解析确认.png" alt=""></p>
<blockquote>
<p>记录类型选择:CNAME<br>主机记录选择：*<br>记录值： 你的github博客网址 ,我的是litxiaosa.github.io</p>
</blockquote>
<h2 id="hexo-添加CNAME文件"><a href="#hexo-添加CNAME文件" class="headerlink" title="hexo 添加CNAME文件"></a>hexo 添加CNAME文件</h2><p>这些全部设置完成后，此时你并不能要申请的域名访问你的博客，接着你需要做的是在blog根目录的source文件夹里创建CNAME文件，不带任何后缀，里面添加你的域名信息，如：litxiaosa.me</p>
<p>然后等几分钟访问一下吧。</p>
<h2 id="安装畅言评论系统"><a href="#安装畅言评论系统" class="headerlink" title="安装畅言评论系统"></a>安装畅言评论系统</h2><p>现在你已经有了域名和备案了，那么我们就可以安装畅言评论系统了，这里是<a href="http://changyan.kuaizhan.com/" target="_blank" rel="noopener">畅言官方网站</a>。注册账号，去认证，备案，这里默认这一系列步骤都操作完成了。</p>
<p>然后我们登陆账号，进入后台，下面有个畅言秘钥。</p>
<p><img src="/2017/06/24/hexo绑定域名/畅言密钥.png" alt=""></p>
<p><img src="/2017/06/24/hexo绑定域名/安装畅言.png" alt=""></p>
<p>去 yelee/layout/_partial/comments 新建一个changyan.ejs 的文件，把上边那个代码拷贝进去，然后appid替换成你的appid， conf替换成你的appKey。添加 红色框住的代码。保存。s</p>
<p><img src="/2017/06/24/hexo绑定域名/修改.png" alt=""></p>
<p>进入 layout/_partial/article.ejs 文件， 添加一下代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;% &#125; else if (theme.changyan.on) &#123; %&gt;</span><br><span class="line">    &lt;%- partial(&apos;comments/changyan&apos;) %&gt;</span><br></pre></td></tr></table></figure>
<p><img src="/2017/06/24/hexo绑定域名/添加代码.png" alt=""></p>
<p>进入  _config.yml根目录 添加下面的配置。</p>
<p><img src="/2017/06/24/hexo绑定域名/添加配置.png" alt=""></p>
<p>部署线上，就看到添加的评论系统了。</p>
<p><img src="/2017/06/24/hexo绑定域名/展示.png" alt=""></p>
]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[安装和配置主题]]></title>
      <url>/2017/06/24/%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE%E4%B8%BB%E9%A2%98/</url>
      <content type="html"><![CDATA[<h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>hexo 自带的主题略显简单了，这里我们介绍安装yelee主题，你也可以选择<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="noopener">其他主题</a>，只是把路径改成你想安装主题的路径就好了，进入你之前创建的文件夹下，执行下面的命令</p>
<pre><code>git clone https://github.com/MOxFIVE/hexo-theme-yelee.git themes/yelee
</code></pre><p>等它克隆好了以后，你就会看到你的文件夹下/themes多了一个yelee文件夹</p>
<a id="more"></a>
<p><img src="/2017/06/24/安装和配置主题/yelee.png" alt=""></p>
<h2 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h2><p>修改b根目blog根目录下的_config.yml</p>
<p><img src="/2017/06/24/安装和配置主题/修改主题.png" alt=""></p>
<h2 id="修改主题设置"><a href="#修改主题设置" class="headerlink" title="修改主题设置"></a>修改主题设置</h2><p>接下来，让我们看看主题的配置文件吧。进入yelee目录，打开该目录的_config.yml,这里是我配置的。都有中文注释，应该可以看懂的。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br></pre></td><td class="code"><pre><span class="line"># Theme Version | 当前版本</span><br><span class="line">Yelee: &quot;3.5&quot;</span><br><span class="line"></span><br><span class="line"># &gt;&gt;&gt; Basic Setup | 基础设置 &lt;&lt;&lt;</span><br><span class="line"></span><br><span class="line"># Header | 主菜单</span><br><span class="line">## About Page: `hexo new page about`</span><br><span class="line">## Tags Cloud Page: `hexo new page tags`</span><br><span class="line">menu:</span><br><span class="line">  主页: /</span><br><span class="line">  所有文章: /archives/</span><br><span class="line">  #随笔: /tags/随笔</span><br><span class="line">  标签云: /tags/</span><br><span class="line">  关于我: /about/</span><br><span class="line"></span><br><span class="line"># Link to your avatar | 填写头像地址</span><br><span class="line">avatar: /img/头像.jpg</span><br><span class="line"></span><br><span class="line"># Small icon of Your site | 站点小图标地址</span><br><span class="line">favicon: /站点小图标.jpg</span><br><span class="line"></span><br><span class="line"># Internationalization | 主题语言</span><br><span class="line">## Change Language in SITE&apos;s _config.yml | 在站点配置中切换语言</span><br><span class="line">## https://hexo.io/docs/internationalization.html</span><br><span class="line">## Available Languages: en, zh-Hans, zh-Hant-TW, zh-Hant-HK</span><br><span class="line"></span><br><span class="line"># Subdirectory | 子目录</span><br><span class="line">## If your site&apos; url is &apos;http://yoursite.com/blog&apos;, set root_url as &apos;/blog/&apos;</span><br><span class="line">## 网站若存放在子目录，请按上面格式填写</span><br><span class="line">## https://hexo.io/docs/configuration.html#URL</span><br><span class="line">root_url:</span><br><span class="line"></span><br><span class="line"># Year of Site Creation | 网站成立年份</span><br><span class="line">since: 2017</span><br><span class="line"></span><br><span class="line"># Social info. Bar | 社交信息展示</span><br><span class="line">## Keep &quot;mailto:&quot; in Email | 设置 Email 时保留 &quot;mailto:&quot;</span><br><span class="line">## Encrypt email 加密邮件地址 http://ctrlq.org/encode/</span><br><span class="line">## RSS requires a plugin to take effect | 使用 RSS 需先安装对应插件</span><br><span class="line">## https://github.com/hexojs/hexo-generator-feed</span><br><span class="line"></span><br><span class="line">subnav:</span><br><span class="line">  #Email: &quot;mailto:123@123.com&quot;</span><br><span class="line">  新浪微博: &quot;https://weibo.com/2517382891/profile?rightmod=1&amp;wvr=6&amp;mod=personinfo&quot;</span><br><span class="line">  GitHub: &quot;https://github.com/Litxiaosa&quot;</span><br><span class="line">  #V2EX: &quot;#&quot;</span><br><span class="line">  #RSS: &quot;/atom.xml&quot;</span><br><span class="line">  知乎: &quot;https://www.zhihu.com/people/xiao-sa-43-46/activities&quot;</span><br><span class="line">  #豆瓣: &quot;douban&quot;</span><br><span class="line">  #简书: &quot;jianshu&quot;</span><br><span class="line">  #SegmentFault: &quot;&quot;</span><br><span class="line">  #博客园: &quot;cnblogs&quot;</span><br><span class="line">  #CSDN: &quot;&quot;</span><br><span class="line">  #Coding: &quot;&quot;</span><br><span class="line">  #网易云音乐: &quot;netease&quot;</span><br><span class="line">  #虾米音乐: &quot;xiami&quot;</span><br><span class="line">  #bilibili: &quot;&quot;</span><br><span class="line">  #AcFun: &quot;&quot;</span><br><span class="line">  #niconico: &quot;&quot;</span><br><span class="line">  #Quora: &quot;&quot;</span><br><span class="line">  #Facebook: &quot;#&quot;</span><br><span class="line">  #Google: &quot;#&quot;</span><br><span class="line">  #Twitter: &quot;#&quot;</span><br><span class="line">  #LinkedIn: &quot;#&quot;</span><br><span class="line">  #QQ: &quot;#&quot;</span><br><span class="line">  #微信: &quot;Wechat&quot;</span><br><span class="line">  #PayPal: &quot;#&quot;</span><br><span class="line">  #StackOverflow: &quot;#&quot;</span><br><span class="line">  #CodePen: &quot;&quot;</span><br><span class="line">  #Plunker: &quot;&quot;</span><br><span class="line">  #Instagram: &quot;#&quot;</span><br><span class="line">  #LOFTER: &quot;&quot;</span><br><span class="line">  #Flickr: &quot;#&quot;</span><br><span class="line">  #reddit: &quot;&quot;</span><br><span class="line">  #Medium: &quot;&quot;</span><br><span class="line">  #TiddlyWiki: &quot;&quot;</span><br><span class="line">  #Tumblr: &quot;&quot;</span><br><span class="line">  #_500px: &quot;&quot;</span><br><span class="line"></span><br><span class="line"># &gt;&gt;&gt; Conments 评论系统 &lt;&lt;&lt;</span><br><span class="line"># Chose ONE as your comment system and keep others disable.</span><br><span class="line"># 选一个作为网站评论系统，其他保持禁用。</span><br><span class="line"></span><br><span class="line">preload_comment: true</span><br><span class="line">## false: 当点击评论条等区域时再加载评论模块</span><br><span class="line">## false: load comment&apos;s section until u click/hover on the bar/icon</span><br><span class="line"></span><br><span class="line">show_count: false</span><br><span class="line">## 是否在主页文章标题旁显示评论数（多说、Disqus）</span><br><span class="line">## Add comment count after article title</span><br><span class="line"></span><br><span class="line">disqus:</span><br><span class="line">  #on: true</span><br><span class="line">  shortname:</span><br><span class="line">  # https://help.disqus.com/customer/en/portal/articles/466208-what-s-a-shortname-</span><br><span class="line">  # It is unnecessary to enable disqus here if</span><br><span class="line">  # you have set &quot;disqus_shortname&quot; in your site&apos;s &quot;_config.yml&quot;</span><br><span class="line"></span><br><span class="line">duoshuo:</span><br><span class="line">  #on: true</span><br><span class="line">  domain:</span><br><span class="line">  # 是否开启多说评论，http://duoshuo.com/create-site/</span><br><span class="line">  # 使用上面网址登陆你的多说，然后创建站点，在 domain 中填入你设定的域名前半部分</span><br><span class="line">  # http://&lt;要填的部分&gt;.duoshuo.com (domain只填上&lt;&gt;里的内容，不要填整个网址)</span><br><span class="line"></span><br><span class="line">youyan:</span><br><span class="line">  #on: true</span><br><span class="line">  id:</span><br><span class="line">  # 是否开启友言评论，http://www.uyan.cc/index.php</span><br><span class="line">  # id 中填写你的友言用户数字ID，注册后进入后台管理即可查看</span><br><span class="line">  # 友言服务在 Web 环境下运行，普通本地环境无法查看，请部署后在线上测试。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># &gt;&gt;&gt; Style Customisation 样式自定义 &lt;&lt;&lt;</span><br><span class="line"></span><br><span class="line"># Background | 背景</span><br><span class="line">## &quot;5&quot;: show images form bg-1.jpg to bg-5.jpg in `/yelee/source/background/`</span><br><span class="line">## &quot;5&quot;: 显示`/yelee/source/background/`文件夹中 bg-1.jpg 到 bg-5.jpg 这5张图片</span><br><span class="line">## &quot;0&quot;: white-gray background | 淳朴灰白背景</span><br><span class="line">background_image: 5</span><br><span class="line"></span><br><span class="line"># Base Font Size | 字号调节</span><br><span class="line">base_font_size: 16  #px, 16 - 24</span><br><span class="line"></span><br><span class="line">## General Color Scheme | 主题配色方案</span><br><span class="line">## 可用值 Value: yilia</span><br><span class="line">color_scheme:</span><br><span class="line"></span><br><span class="line">highlight_style:</span><br><span class="line">  on: true</span><br><span class="line">  inline_code: 2  # Value: 0 - 9 可选</span><br><span class="line">  code_block: 0  # Value: 0 - 4</span><br><span class="line">  # Set inline_code to style highlight text</span><br><span class="line">  # Chose a highlight theme for code block</span><br><span class="line">  # 通过 inline_code 切换内置文本高亮样式</span><br><span class="line">  # 通过 code_block 切换内置代码高亮配色主题</span><br><span class="line"></span><br><span class="line">blockquote_style:</span><br><span class="line">  on: true</span><br><span class="line">  blockquote: 3  # Value: 0 - 7 可选</span><br><span class="line">  # 自定义文章「引用部分」的样式</span><br><span class="line"></span><br><span class="line"># Headings Style | 标题风格</span><br><span class="line">## 0-Yelee, 1-Yilia, 2-GitHub</span><br><span class="line">heading_style: 0 # Value: 0 - 2</span><br><span class="line"></span><br><span class="line">## List style type (ul) | 无序列表项标记样式</span><br><span class="line">list_style: 0  # value: 0 - 12 可选</span><br><span class="line"></span><br><span class="line"># 左边栏宽度 px</span><br><span class="line">left_col_width: 300</span><br><span class="line"></span><br><span class="line"># Copyright info. of post | 文末版权信息</span><br><span class="line">copyright: false</span><br><span class="line"></span><br><span class="line"># Table of contents | 文章目录</span><br><span class="line">toc:</span><br><span class="line">  on: true</span><br><span class="line">  list_number: true # 目录序号</span><br><span class="line">  max_depth: 5  # 1 - 6 (h1-h6) 目录最大级数</span><br><span class="line">  nowrap: false # Keep title on same line | 目录标题不换行</span><br><span class="line"></span><br><span class="line"># 是否开启主页及加载头像时的动画效果</span><br><span class="line"># Animation in Homepage and Loading avatar</span><br><span class="line">animate: true</span><br><span class="line"></span><br><span class="line"># Load jQuery UI to style tooltips</span><br><span class="line"># 工具提示框样式美化</span><br><span class="line">jquery_ui: true</span><br><span class="line"></span><br><span class="line"># Max width of right cloumn | 限制右侧内容的宽带</span><br><span class="line">limit_article_width:</span><br><span class="line">  on: false</span><br><span class="line">  max_width: 60 # em</span><br><span class="line"></span><br><span class="line"># &gt;&gt;&gt; Small features | 小功能设置 &lt;&lt;&lt;</span><br><span class="line"></span><br><span class="line"># 是否开启边栏多标签切换</span><br><span class="line"># Birdhouse button in left column</span><br><span class="line">tagcloud: true</span><br><span class="line"></span><br><span class="line"># Blogroll, Link exchange | 友情链接</span><br><span class="line">#friends:</span><br><span class="line">  #Hexo: https://hexo.io</span><br><span class="line">  #GitHub: https://pages.github.com/</span><br><span class="line">  #MOxFIVE: http://moxfive.xyz/</span><br><span class="line">friends: true</span><br><span class="line"></span><br><span class="line">#是否开启“关于我”。</span><br><span class="line">aboutme: 喜欢看书，对吉他有点小兴趣，专注于java。</span><br><span class="line">#aboutme: true</span><br><span class="line"></span><br><span class="line"># Open link in a new tab | 是否在新窗口打开链接</span><br><span class="line">## `global` 0: Set separately, 1: Open all in new 2: Open all in current</span><br><span class="line">## `global` 0: 分开设置, 1: 全部在新标签打开, 2: 全部在&quot;当前&quot;标签打开</span><br><span class="line">open_in_new:</span><br><span class="line">  global: 0 # 0-2</span><br><span class="line">  title: false # article title in homepage 主页文章标题</span><br><span class="line">  post: true # link within post/page 正文中的链接</span><br><span class="line">  tags: false # 标签</span><br><span class="line">  categories: false # 分类</span><br><span class="line">  article_nav: false # 导航</span><br><span class="line">  archives: false # 归档</span><br><span class="line">  mini_archives: false # 迷你归档</span><br><span class="line">  menu: false # 边栏菜单</span><br><span class="line">  friends: true  # 友情链接</span><br><span class="line">  socail: false # 社交图标</span><br><span class="line"></span><br><span class="line"># Customize feed link 自定义订阅地址</span><br><span class="line">rss: /atom.xml</span><br><span class="line"></span><br><span class="line"># Update Reminder for IE6/7/8</span><br><span class="line"># 针对 IE6/7/8 的升级浏览器提示</span><br><span class="line">ie_updater:</span><br><span class="line">  on: true</span><br><span class="line">  link: //outdatedbrowser.com/</span><br><span class="line">  ## http://browsehappy.com/</span><br><span class="line">  ## http://outdatedbrowser.com/</span><br><span class="line"></span><br><span class="line"># Tab Title Change | 标签页标题切换</span><br><span class="line">tab_title_change:</span><br><span class="line">  on: true</span><br><span class="line">  left_tab_title: &apos;(つェ⊂) 我藏好了哦~ &apos;</span><br><span class="line">  return_tab_title: &apos;(*´∇｀*) 被你发现啦~ &apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># &gt;&gt;&gt; Vendors | 第三方工具 &amp; 服务 &lt;&lt;&lt;</span><br><span class="line"></span><br><span class="line"># Local Site Search | 本地站内搜索</span><br><span class="line">## Insatall below plugin to take effect | 使用搜索需先安装对应插件</span><br><span class="line">## https://github.com/PaicHyperionDev/hexo-generator-search</span><br><span class="line">search:</span><br><span class="line">  on: true</span><br><span class="line">  onload: false</span><br><span class="line">  ## true: get search.xml file when the page has loaded</span><br><span class="line">  ## false: get the file when search box gets focus</span><br><span class="line"></span><br><span class="line"># images viewer | 图片浏览器</span><br><span class="line">## http://www.fancyapps.com/fancybox/</span><br><span class="line">fancybox: true</span><br><span class="line"></span><br><span class="line"># Display Math(LaTeX, MathML...) | 数学公式支持</span><br><span class="line">## https://www.mathjax.org/</span><br><span class="line">mathjax: true</span><br><span class="line"></span><br><span class="line"># Socail Share | 是否开启分享</span><br><span class="line">share:</span><br><span class="line">  on: true</span><br><span class="line">  baidu: true</span><br><span class="line">  addthis: false</span><br><span class="line">  addthis_pubid: &quot;ra-56ff76c972fc0cf9&quot;</span><br><span class="line">  ## Go to www.addthis.com/dashboard to get your pubid (in src of Code)</span><br><span class="line">  ## and customize AddThis share buttons</span><br><span class="line"></span><br><span class="line"># 百度、谷歌站长验证。填写 HTML 标签 content</span><br><span class="line"># Site Verification for Google and Baidu. HTML label content.</span><br><span class="line">baidu_site:</span><br><span class="line">google_site:</span><br><span class="line"></span><br><span class="line"># Fill in Google Analytics tracking ID, #e.g. UA-XXXXX-X</span><br><span class="line">google_analytics:</span><br><span class="line"></span><br><span class="line"># 百度统计 http://sitecenter.baidu.com/sc-web/</span><br><span class="line"># 查看代码，填入 //hm.baidu.com/hm.js? 之后的内容</span><br><span class="line">baidu_tongji:  #填入 //hm.baidu.com/hm.js? 之后的内容</span><br><span class="line"></span><br><span class="line"># 不蒜子网站计数设置</span><br><span class="line"># http://ibruce.info/2015/04/04/busuanzi/</span><br><span class="line">visit_counter:</span><br><span class="line">  on: true</span><br><span class="line">  site_visit: true</span><br><span class="line">  page_visit: true</span><br><span class="line"></span><br><span class="line"># GitHub Repo Widget</span><br><span class="line"># https://github.com/hustcc/GitHub-Repo-Widget.js</span><br><span class="line">github_widget: false</span><br><span class="line"></span><br><span class="line"># Progress Bar | 页面加载进度条</span><br><span class="line"># Demo: http://github.hubspot.com/pace/docs/welcome/</span><br><span class="line"># type: barber-shop|big-counter|bounce|center-atom|center-circle|</span><br><span class="line">#       center-radar|center-simple|corner-indicator|flash|flat-top|</span><br><span class="line">#       loading-bar|mac-osx|minimal</span><br><span class="line"># color: black|blue|green|orange|pink|purple|red|silver|white|yellow|</span><br><span class="line">progressBar:</span><br><span class="line">  on: true</span><br><span class="line">  type: &quot;minimal&quot;  # Keep Quotes | 保留引号避免出错</span><br><span class="line">  color: blue</span><br><span class="line"></span><br><span class="line">CDN:</span><br><span class="line">  jquery: //cdn.bootcss.com/jquery/2.2.4/jquery.min.js</span><br><span class="line">  require: //cdn.bootcss.com/require.js/2.2.0/require.min.js</span><br><span class="line">  fontawesome: //cdn.bootcss.com/font-awesome/4.6.3/css/font-awesome.min.css</span><br><span class="line">  fancybox_js: //cdn.bootcss.com/fancybox/2.1.5/jquery.fancybox.min.js</span><br><span class="line">  fancybox_css: //cdn.bootcss.com/fancybox/2.1.5/jquery.fancybox.min.css</span><br><span class="line">  animate_css: //cdn.bootcss.com/animate.css/3.5.1/animate.min.css</span><br><span class="line">  jquery_ui_js: //cdn.bootcss.com/jqueryui/1.10.4/jquery-ui.min.js</span><br><span class="line">  jquery_ui_css: //cdn.bootcss.com/jqueryui/1.10.4/css/jquery-ui.min.css</span><br><span class="line">  pace_js: //cdn.bootcss.com/pace/1.0.2/pace.min.js</span><br><span class="line">  clipboard: //cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js</span><br><span class="line">  mathjax: //cdn.bootcss.com/mathjax/2.6.1/MathJax.js</span><br><span class="line">  scrollreveal: //cdn.bootcss.com/scrollReveal.js/3.1.4/scrollreveal.min.js</span><br></pre></td></tr></table></figure>
<h3 id="blog根目录下的-config-yml"><a href="#blog根目录下的-config-yml" class="headerlink" title="blog根目录下的 _config.yml"></a>blog根目录下的 _config.yml</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">    # Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line">title: 潇洒的博客</span><br><span class="line">subtitle: 隔岸无旧情，姑苏有钟声。</span><br><span class="line">description: 喜欢看书，对吉他有点小兴趣，专注JAVA。</span><br><span class="line">author: 潇洒</span><br><span class="line">language:</span><br><span class="line">timezone: #网站时区。Hexo 默认使用您电脑的时区</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: http://litxiaosa.me</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"># Directory</span><br><span class="line">source_dir: source #源文件夹，这个文件夹用来存放内容。</span><br><span class="line">public_dir: public #公共文件夹，这个文件夹用于存放生成的站点文件。</span><br><span class="line">tag_dir: tags #标签文件夹</span><br><span class="line">archive_dir: archives #归档文件夹</span><br><span class="line">category_dir: categories #分类文件夹</span><br><span class="line">code_dir: downloads/code #nclude code 文件夹</span><br><span class="line">i18n_dir: :lang #国际化（i18n）文件夹</span><br><span class="line">skip_render: #跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。</span><br><span class="line"></span><br><span class="line"># Writing</span><br><span class="line">new_post_name: :title.md # File name of new posts # 新建文章默认文件名</span><br><span class="line">default_layout: post   #默认布局</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link: true # Open external links in new tab # 在新标签中打开一个外部链接，默认为true</span><br><span class="line">filename_case: 0  #转换文件名，1代表小写；2代表大写；默认为0，意思就是创建文章的时候，是否自动帮你转换文件名，默认就行，意义不大。</span><br><span class="line">render_drafts: true #是否渲染_drafts目录下的文章，默认为false</span><br><span class="line">post_asset_folder: true #启动 Asset 文件夹</span><br><span class="line">relative_link: false #把链接改为与根目录的相对位址，默认false</span><br><span class="line">future: true #显示未来的文章</span><br><span class="line">highlight:  #代码块的设置</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line"># Home page setting</span><br><span class="line"># path: Root path for your blogs index page. (default = &apos;&apos;)</span><br><span class="line"># per_page: Posts displayed per page. (0 = disable pagination)</span><br><span class="line"># order_by: Posts order. (Order by date descending by default)</span><br><span class="line">index_generator:</span><br><span class="line">  path: &apos;&apos;</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line"></span><br><span class="line"># Category &amp; Tag 分类和标签的设置</span><br><span class="line">default_category: uncategorized #默认分类</span><br><span class="line">category_map: #分类别名</span><br><span class="line">tag_map:  #标签别名</span><br><span class="line"></span><br><span class="line"># Date / Time format</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line"># Pagination</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 10 #每页显示的文章量 (0 = 关闭分页功能)</span><br><span class="line">pagination_dir: page #分页目录</span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: yelee</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo:</span><br><span class="line">      github: git@github.com:Litxiaosa/Litxiaosa.github.io.git</span><br><span class="line">      branch: master</span><br></pre></td></tr></table></figure>
<h2 id="个人头像"><a href="#个人头像" class="headerlink" title="个人头像"></a>个人头像</h2><p>默认头像存储于 yelee/source/img/avatar.png，你可以替换你想要的图片，也可以上网上的图片链接.</p>
<h2 id="HTTPS事项"><a href="#HTTPS事项" class="headerlink" title="HTTPS事项"></a>HTTPS事项</h2><p>如果你的站点通过 HTTPS 访问，那下列的服务可能 无法正常使用：</p>
<blockquote>
<p>多说评论<br>友言评论<br>百度分享<br>百度统计</p>
</blockquote>
<h2 id="可使用下列支持-HTTPS-的服务替代："><a href="#可使用下列支持-HTTPS-的服务替代：" class="headerlink" title="可使用下列支持 HTTPS 的服务替代："></a>可使用下列支持 HTTPS 的服务替代：</h2><blockquote>
<p>Disqus 评论<br>AddThis<br>谷歌分析</p>
</blockquote>
<h2 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h2><p>如果你写的文章过长，全部展示是很难看的，所以在文章里你想折叠的地方可以写</p>
<pre><code>&lt;!-- more --&gt;   
</code></pre><h2 id="标签云页面"><a href="#标签云页面" class="headerlink" title="标签云页面"></a>标签云页面</h2><p>如果你想开启标签云，在folder/source 文件夹下新建一个tags文件夹 ，里面新建一个index.md的文件，然后把下面的内容拷进去</p>
<pre><code>layout: tags
title: tags 

---
</code></pre><h2 id="本地站内搜索"><a href="#本地站内搜索" class="headerlink" title="本地站内搜索"></a>本地站内搜索</h2><p>使用搜索需先安装对应插件，用于生成索引数据,执行下面的命令</p>
<pre><code>npm install hexo-generator-search --save
</code></pre><p>然后，在你的主题_config.ymd文件里, 改为 on: true即为启用搜索</p>
<pre><code>search: 
     on: true
     onload: false
</code></pre><p> onload: true : 索引数据 search.xml 随页面一起加载 [效率优先]<br> onload: false : 当激活搜索框时再下载索引数据 [按需加载]</p>
<h2 id="站点小图标"><a href="#站点小图标" class="headerlink" title="站点小图标"></a>站点小图标</h2><p>若将图标存储yelee/source/favicon.png,则配置中对应填写 `/favicon.png，另外填网络图片的地址也可</p>
<pre><code>favicon: /favicon.png
</code></pre><p>结果如下：</p>
<p><img src="/2017/06/24/安装和配置主题/站点图标.png" alt=""></p>
<h2 id="网页背景图"><a href="#网页背景图" class="headerlink" title="网页背景图"></a>网页背景图</h2><p>背景图文件所在路径:</p>
<blockquote>
<p>/yelee/source/background/<br>themes/yelee/_config.yml 背景参数:<br>background_image: 5<br>默认值为5，可按需修改<br>“5”: 设置/yelee/source/background/文件夹中 bg-1.jpg 到 bg-5.jpg 这5张图片为背景<br>“0”: 取消网页背景图，使用淳朴的灰白主题</p>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo+github搭建自己的个人博客]]></title>
      <url>/2017/06/24/hexo-github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<p>由于个人电脑是Mac, 所以这里就以Mac OS为参考，其实Mac跟windows搭建博客差别不大，如果用windows的朋友觉得不适，请移步之<a href="http://tengj.top/2016/02/20/hexoTotal/" target="_blank" rel="noopener">嘟嘟MD的独立博客</a>，有详细的windows平台下的教程。嗯，那我们开始吧。</p>
<a id="more"></a>
<h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>点击进入<a href="https://git-scm.com/" target="_blank" rel="noopener">git官网</a>，下载安装包，然后按步骤安装就好。可以输入下面的命令查看git是否安装成功。</p>
<pre><code>git --version
</code></pre><h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><p>点击进入 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">node.js官网</a>，一个是通用版，一个是最新版，选择一个下载，然后按步骤安装。</p>
<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><ul>
<li><p>下载安装hexo</p>
<pre><code>npm install -g hexo
</code></pre><p>安装好以后，在终端输入：</p>
<pre><code>hexo
</code></pre><p>如果出现下图，则说明安装成功：</p>
<p>  <img src="/2017/06/24/hexo-github搭建自己的个人博客/安装成功.png" alt=""></p>
</li>
<li><p>初始化博客</p>
<p>  建立一个博客的文件夹,blog是文件夹名字，可以根据自己的喜好定义</p>
<pre><code>hexo init blog
</code></pre><p>  然后进入该文件夹  </p>
<pre><code>cd blog
</code></pre><p>  运行node.js 命令，根据博客默认的配置安装必要的依赖包</p>
<pre><code>npm install
</code></pre><p>  初始化完成后，我们可以看到博客的文件夹</p>
<p>  <img src="/2017/06/24/hexo-github搭建自己的个人博客/hexo目录.png" alt=""></p>
<p>  那么基本的搭建过程就完成了，让我们看看效果吧，这里介绍几个命令。</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  #清理缓存，如果你改动了东西，没有效果，试试这个命吧。</span><br><span class="line">hexo g   #完整命令为hexo generate,用于生成静态文件</span><br><span class="line">hexo s   #完整命令为hexo server,用于启动服务器，主要用来本地预览</span><br><span class="line">hexo d   #完整命令为hexo deploy,用于将本地文件发布到github上</span><br><span class="line">hexo n   #完整命令为hexo new,用于新建一篇文章</span><br></pre></td></tr></table></figure>
<p>  在你的终端 hexo目录下执行下面的命令</p>
<pre><code>hexo g  

hexo s
</code></pre><p>  然后浏览器访问<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>, 此时，你应该看到你的博客了。当然了，这个博客只是本地的，别人是看不到了，你需要把它放到github上。</p>
</li>
</ul>
<h2 id="注册github账号"><a href="#注册github账号" class="headerlink" title="注册github账号"></a>注册github账号</h2><p>如果您已有github账号，请跳过，进入github进行注册，邮箱和密码请记好。</p>
<ul>
<li><p>创建repository</p>
<p>  repository就相当于一个仓库，存放你代码的地方，点击 new repository</p>
<p>  <img src="/2017/06/24/hexo-github搭建自己的个人博客/repository.png" alt=""></p>
<p>  填写你的项目名字repository name, 这个名字格式要为youname.github.io, 例如我的xiaosa.github.io, 填写完以后点击下面的 creat创建。</p>
</li>
</ul>
<h2 id="部署本地项目到github上"><a href="#部署本地项目到github上" class="headerlink" title="部署本地项目到github上"></a>部署本地项目到github上</h2><p><img src="/2017/06/24/hexo-github搭建自己的个人博客/config.png" alt=""></p>
<p>编辑它，在_config.yml最下方，添加如下配置(记得改成自己的。另外记得一点，hexo的配置文件中任何’:’后面都是带一个空格的)</p>
<p><img src="/2017/06/24/hexo-github搭建自己的个人博客/配置github.png" alt=""></p>
<p>github是你之前创建仓库的地址，可以通过下图获得</p>
<p><img src="/2017/06/24/hexo-github搭建自己的个人博客/获得仓库路径.png" alt=""></p>
<p>然后保存它，如果你是第一次使用github或者使用过但是没有配置过SSH,可能你需要配置一下，可以检查一下是否已经存在SSH Keys</p>
<pre><code>~/.ssh/
</code></pre><p>.ssh文件为隐藏文件，需要先设置隐藏文件可见才可以看到。 如果不存在，输入下面的命令创建。</p>
<pre><code>ssh-keygen -t rsa -C &quot;你注册github的邮箱&quot;
</code></pre><p>一路回车就好，这个不需要设置密码，因为这个Key仅仅用于简单的服务，完成后输入命令打开id_rsa.pub， id_rsa是私钥，id_rsa.pub是公钥，我们需要的是公钥。</p>
<pre><code>cat ~/.ssh/id_rsa.pub
</code></pre><p>然后你就会得到最后面含有你邮箱的公钥，复制它。去你的github下。</p>
<p><img src="/2017/06/24/hexo-github搭建自己的个人博客/ssh keys.png" alt=""></p>
<p>title随便写，把复制的公钥粘贴到key里。点下面的add SSH key。好了。基本配置就完了。下面我们把我们的代码传到 github上，在终端输入</p>
<pre><code>hexo g

hexo d
</code></pre><p>如果执行hexo d 报下面的错误<br><img src="/2017/06/24/hexo-github搭建自己的个人博客/部署报错.png" alt=""></p>
<p>就先安装一下hexo-deployer-git,再执行hexo d</p>
<pre><code>npm install hexo-deployer-git --save
</code></pre><p>至此，我们的项目就部署到github上了。</p>
<p>那么，访问博客的链接是什么呢？ 点击标注的Settings,往下拉，如果你看到的是这样的。那么点击那个 None，选择第一个，点save. 访问你博客的链接就出来了，去访问试试吧！</p>
<p><img src="/2017/06/24/hexo-github搭建自己的个人博客/访问链接.png" alt=""></p>
<h2 id="发表文章"><a href="#发表文章" class="headerlink" title="发表文章"></a>发表文章</h2><p>既然博客搭建好了，就发表一下文章看看效果吧。hexo中写文章使用的是Markdown，语法不难，看一下就会了。然后去下载一个Markdown的编辑器，很多，看个人喜好。</p>
<p>在终端的blog路径下输入</p>
<pre><code>hexo new &quot;my new post&quot;
</code></pre><p>然后就会在你 folder/source/_posts下生成一个.md的文件，以后你的文章就存放到这里，你也可以直接在这里新建一个.md的文件。写完文章后，你可以使用hexo g命令生成静态文件， 然后hexo s进行本地预览。感觉没问题了，hexo d上传到github上吧。</p>
]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/06/24/HelloWorld/</url>
      <content type="html"><![CDATA[<p>在<a href="http://tengj.top/" target="_blank" rel="noopener">嘟嘟MD</a>技术博客的帮助下，属于我自己的博客终于搭建起来了！</p>
<p>折腾了好几天，在github page上看到自己的博客加载下来时，油然而生的成就感，兴奋了半上午。期间也踩了不少的坑，再一次感谢嘟嘟MD的指导。是的，它不是QQ空间，不是微博，也不是贴吧，它是属于自己的一个块小小的领地，所以我满足于这种归属感。</p>
<p>学编程时输入的第一个词语就是hello world！它更想是象征。那第一篇文章就献给你吧。</p>
]]></content>
      
        
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
